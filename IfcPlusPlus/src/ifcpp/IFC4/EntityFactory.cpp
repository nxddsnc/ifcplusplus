/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#include <map>
#include <functional>
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/IFC4/include/IfcActionRequest.h"
#include "ifcpp/IFC4/include/IfcActor.h"
#include "ifcpp/IFC4/include/IfcActorRole.h"
#include "ifcpp/IFC4/include/IfcActuator.h"
#include "ifcpp/IFC4/include/IfcActuatorType.h"
#include "ifcpp/IFC4/include/IfcAddress.h"
#include "ifcpp/IFC4/include/IfcAdvancedBrep.h"
#include "ifcpp/IFC4/include/IfcAdvancedBrepWithVoids.h"
#include "ifcpp/IFC4/include/IfcAdvancedFace.h"
#include "ifcpp/IFC4/include/IfcAirTerminal.h"
#include "ifcpp/IFC4/include/IfcAirTerminalBox.h"
#include "ifcpp/IFC4/include/IfcAirTerminalBoxType.h"
#include "ifcpp/IFC4/include/IfcAirTerminalType.h"
#include "ifcpp/IFC4/include/IfcAirToAirHeatRecovery.h"
#include "ifcpp/IFC4/include/IfcAirToAirHeatRecoveryType.h"
#include "ifcpp/IFC4/include/IfcAlarm.h"
#include "ifcpp/IFC4/include/IfcAlarmType.h"
#include "ifcpp/IFC4/include/IfcAnnotation.h"
#include "ifcpp/IFC4/include/IfcAnnotationFillArea.h"
#include "ifcpp/IFC4/include/IfcApplication.h"
#include "ifcpp/IFC4/include/IfcAppliedValue.h"
#include "ifcpp/IFC4/include/IfcApproval.h"
#include "ifcpp/IFC4/include/IfcApprovalRelationship.h"
#include "ifcpp/IFC4/include/IfcArbitraryClosedProfileDef.h"
#include "ifcpp/IFC4/include/IfcArbitraryOpenProfileDef.h"
#include "ifcpp/IFC4/include/IfcArbitraryProfileDefWithVoids.h"
#include "ifcpp/IFC4/include/IfcAsset.h"
#include "ifcpp/IFC4/include/IfcAsymmetricIShapeProfileDef.h"
#include "ifcpp/IFC4/include/IfcAudioVisualAppliance.h"
#include "ifcpp/IFC4/include/IfcAudioVisualApplianceType.h"
#include "ifcpp/IFC4/include/IfcAxis1Placement.h"
#include "ifcpp/IFC4/include/IfcAxis2Placement2D.h"
#include "ifcpp/IFC4/include/IfcAxis2Placement3D.h"
#include "ifcpp/IFC4/include/IfcBSplineCurve.h"
#include "ifcpp/IFC4/include/IfcBSplineCurveWithKnots.h"
#include "ifcpp/IFC4/include/IfcBSplineSurface.h"
#include "ifcpp/IFC4/include/IfcBSplineSurfaceWithKnots.h"
#include "ifcpp/IFC4/include/IfcBeam.h"
#include "ifcpp/IFC4/include/IfcBeamStandardCase.h"
#include "ifcpp/IFC4/include/IfcBeamType.h"
#include "ifcpp/IFC4/include/IfcBlobTexture.h"
#include "ifcpp/IFC4/include/IfcBlock.h"
#include "ifcpp/IFC4/include/IfcBoiler.h"
#include "ifcpp/IFC4/include/IfcBoilerType.h"
#include "ifcpp/IFC4/include/IfcBooleanClippingResult.h"
#include "ifcpp/IFC4/include/IfcBooleanResult.h"
#include "ifcpp/IFC4/include/IfcBoundaryCondition.h"
#include "ifcpp/IFC4/include/IfcBoundaryCurve.h"
#include "ifcpp/IFC4/include/IfcBoundaryEdgeCondition.h"
#include "ifcpp/IFC4/include/IfcBoundaryFaceCondition.h"
#include "ifcpp/IFC4/include/IfcBoundaryNodeCondition.h"
#include "ifcpp/IFC4/include/IfcBoundaryNodeConditionWarping.h"
#include "ifcpp/IFC4/include/IfcBoundedCurve.h"
#include "ifcpp/IFC4/include/IfcBoundedSurface.h"
#include "ifcpp/IFC4/include/IfcBoundingBox.h"
#include "ifcpp/IFC4/include/IfcBoxedHalfSpace.h"
#include "ifcpp/IFC4/include/IfcBuilding.h"
#include "ifcpp/IFC4/include/IfcBuildingElement.h"
#include "ifcpp/IFC4/include/IfcBuildingElementPart.h"
#include "ifcpp/IFC4/include/IfcBuildingElementPartType.h"
#include "ifcpp/IFC4/include/IfcBuildingElementProxy.h"
#include "ifcpp/IFC4/include/IfcBuildingElementProxyType.h"
#include "ifcpp/IFC4/include/IfcBuildingElementType.h"
#include "ifcpp/IFC4/include/IfcBuildingStorey.h"
#include "ifcpp/IFC4/include/IfcBuildingSystem.h"
#include "ifcpp/IFC4/include/IfcBurner.h"
#include "ifcpp/IFC4/include/IfcBurnerType.h"
#include "ifcpp/IFC4/include/IfcCShapeProfileDef.h"
#include "ifcpp/IFC4/include/IfcCableCarrierFitting.h"
#include "ifcpp/IFC4/include/IfcCableCarrierFittingType.h"
#include "ifcpp/IFC4/include/IfcCableCarrierSegment.h"
#include "ifcpp/IFC4/include/IfcCableCarrierSegmentType.h"
#include "ifcpp/IFC4/include/IfcCableFitting.h"
#include "ifcpp/IFC4/include/IfcCableFittingType.h"
#include "ifcpp/IFC4/include/IfcCableSegment.h"
#include "ifcpp/IFC4/include/IfcCableSegmentType.h"
#include "ifcpp/IFC4/include/IfcCartesianPoint.h"
#include "ifcpp/IFC4/include/IfcCartesianPointList.h"
#include "ifcpp/IFC4/include/IfcCartesianPointList2D.h"
#include "ifcpp/IFC4/include/IfcCartesianPointList3D.h"
#include "ifcpp/IFC4/include/IfcCartesianTransformationOperator.h"
#include "ifcpp/IFC4/include/IfcCartesianTransformationOperator2D.h"
#include "ifcpp/IFC4/include/IfcCartesianTransformationOperator2DnonUniform.h"
#include "ifcpp/IFC4/include/IfcCartesianTransformationOperator3D.h"
#include "ifcpp/IFC4/include/IfcCartesianTransformationOperator3DnonUniform.h"
#include "ifcpp/IFC4/include/IfcCenterLineProfileDef.h"
#include "ifcpp/IFC4/include/IfcChiller.h"
#include "ifcpp/IFC4/include/IfcChillerType.h"
#include "ifcpp/IFC4/include/IfcChimney.h"
#include "ifcpp/IFC4/include/IfcChimneyType.h"
#include "ifcpp/IFC4/include/IfcCircle.h"
#include "ifcpp/IFC4/include/IfcCircleHollowProfileDef.h"
#include "ifcpp/IFC4/include/IfcCircleProfileDef.h"
#include "ifcpp/IFC4/include/IfcCivilElement.h"
#include "ifcpp/IFC4/include/IfcCivilElementType.h"
#include "ifcpp/IFC4/include/IfcClassification.h"
#include "ifcpp/IFC4/include/IfcClassificationReference.h"
#include "ifcpp/IFC4/include/IfcClosedShell.h"
#include "ifcpp/IFC4/include/IfcCoil.h"
#include "ifcpp/IFC4/include/IfcCoilType.h"
#include "ifcpp/IFC4/include/IfcColourRgb.h"
#include "ifcpp/IFC4/include/IfcColourRgbList.h"
#include "ifcpp/IFC4/include/IfcColourSpecification.h"
#include "ifcpp/IFC4/include/IfcColumn.h"
#include "ifcpp/IFC4/include/IfcColumnStandardCase.h"
#include "ifcpp/IFC4/include/IfcColumnType.h"
#include "ifcpp/IFC4/include/IfcCommunicationsAppliance.h"
#include "ifcpp/IFC4/include/IfcCommunicationsApplianceType.h"
#include "ifcpp/IFC4/include/IfcComplexProperty.h"
#include "ifcpp/IFC4/include/IfcComplexPropertyTemplate.h"
#include "ifcpp/IFC4/include/IfcCompositeCurve.h"
#include "ifcpp/IFC4/include/IfcCompositeCurveOnSurface.h"
#include "ifcpp/IFC4/include/IfcCompositeCurveSegment.h"
#include "ifcpp/IFC4/include/IfcCompositeProfileDef.h"
#include "ifcpp/IFC4/include/IfcCompressor.h"
#include "ifcpp/IFC4/include/IfcCompressorType.h"
#include "ifcpp/IFC4/include/IfcCondenser.h"
#include "ifcpp/IFC4/include/IfcCondenserType.h"
#include "ifcpp/IFC4/include/IfcConic.h"
#include "ifcpp/IFC4/include/IfcConnectedFaceSet.h"
#include "ifcpp/IFC4/include/IfcConnectionCurveGeometry.h"
#include "ifcpp/IFC4/include/IfcConnectionGeometry.h"
#include "ifcpp/IFC4/include/IfcConnectionPointEccentricity.h"
#include "ifcpp/IFC4/include/IfcConnectionPointGeometry.h"
#include "ifcpp/IFC4/include/IfcConnectionSurfaceGeometry.h"
#include "ifcpp/IFC4/include/IfcConnectionVolumeGeometry.h"
#include "ifcpp/IFC4/include/IfcConstraint.h"
#include "ifcpp/IFC4/include/IfcConstructionEquipmentResource.h"
#include "ifcpp/IFC4/include/IfcConstructionEquipmentResourceType.h"
#include "ifcpp/IFC4/include/IfcConstructionMaterialResource.h"
#include "ifcpp/IFC4/include/IfcConstructionMaterialResourceType.h"
#include "ifcpp/IFC4/include/IfcConstructionProductResource.h"
#include "ifcpp/IFC4/include/IfcConstructionProductResourceType.h"
#include "ifcpp/IFC4/include/IfcConstructionResource.h"
#include "ifcpp/IFC4/include/IfcConstructionResourceType.h"
#include "ifcpp/IFC4/include/IfcContext.h"
#include "ifcpp/IFC4/include/IfcContextDependentUnit.h"
#include "ifcpp/IFC4/include/IfcControl.h"
#include "ifcpp/IFC4/include/IfcController.h"
#include "ifcpp/IFC4/include/IfcControllerType.h"
#include "ifcpp/IFC4/include/IfcConversionBasedUnit.h"
#include "ifcpp/IFC4/include/IfcConversionBasedUnitWithOffset.h"
#include "ifcpp/IFC4/include/IfcCooledBeam.h"
#include "ifcpp/IFC4/include/IfcCooledBeamType.h"
#include "ifcpp/IFC4/include/IfcCoolingTower.h"
#include "ifcpp/IFC4/include/IfcCoolingTowerType.h"
#include "ifcpp/IFC4/include/IfcCoordinateOperation.h"
#include "ifcpp/IFC4/include/IfcCoordinateReferenceSystem.h"
#include "ifcpp/IFC4/include/IfcCostItem.h"
#include "ifcpp/IFC4/include/IfcCostSchedule.h"
#include "ifcpp/IFC4/include/IfcCostValue.h"
#include "ifcpp/IFC4/include/IfcCovering.h"
#include "ifcpp/IFC4/include/IfcCoveringType.h"
#include "ifcpp/IFC4/include/IfcCrewResource.h"
#include "ifcpp/IFC4/include/IfcCrewResourceType.h"
#include "ifcpp/IFC4/include/IfcCsgPrimitive3D.h"
#include "ifcpp/IFC4/include/IfcCsgSolid.h"
#include "ifcpp/IFC4/include/IfcCurrencyRelationship.h"
#include "ifcpp/IFC4/include/IfcCurtainWall.h"
#include "ifcpp/IFC4/include/IfcCurtainWallType.h"
#include "ifcpp/IFC4/include/IfcCurve.h"
#include "ifcpp/IFC4/include/IfcCurveBoundedPlane.h"
#include "ifcpp/IFC4/include/IfcCurveBoundedSurface.h"
#include "ifcpp/IFC4/include/IfcCurveStyle.h"
#include "ifcpp/IFC4/include/IfcCurveStyleFont.h"
#include "ifcpp/IFC4/include/IfcCurveStyleFontAndScaling.h"
#include "ifcpp/IFC4/include/IfcCurveStyleFontPattern.h"
#include "ifcpp/IFC4/include/IfcCylindricalSurface.h"
#include "ifcpp/IFC4/include/IfcDamper.h"
#include "ifcpp/IFC4/include/IfcDamperType.h"
#include "ifcpp/IFC4/include/IfcDerivedProfileDef.h"
#include "ifcpp/IFC4/include/IfcDerivedUnit.h"
#include "ifcpp/IFC4/include/IfcDerivedUnitElement.h"
#include "ifcpp/IFC4/include/IfcDimensionalExponents.h"
#include "ifcpp/IFC4/include/IfcDirection.h"
#include "ifcpp/IFC4/include/IfcDiscreteAccessory.h"
#include "ifcpp/IFC4/include/IfcDiscreteAccessoryType.h"
#include "ifcpp/IFC4/include/IfcDistributionChamberElement.h"
#include "ifcpp/IFC4/include/IfcDistributionChamberElementType.h"
#include "ifcpp/IFC4/include/IfcDistributionCircuit.h"
#include "ifcpp/IFC4/include/IfcDistributionControlElement.h"
#include "ifcpp/IFC4/include/IfcDistributionControlElementType.h"
#include "ifcpp/IFC4/include/IfcDistributionElement.h"
#include "ifcpp/IFC4/include/IfcDistributionElementType.h"
#include "ifcpp/IFC4/include/IfcDistributionFlowElement.h"
#include "ifcpp/IFC4/include/IfcDistributionFlowElementType.h"
#include "ifcpp/IFC4/include/IfcDistributionPort.h"
#include "ifcpp/IFC4/include/IfcDistributionSystem.h"
#include "ifcpp/IFC4/include/IfcDocumentInformation.h"
#include "ifcpp/IFC4/include/IfcDocumentInformationRelationship.h"
#include "ifcpp/IFC4/include/IfcDocumentReference.h"
#include "ifcpp/IFC4/include/IfcDoor.h"
#include "ifcpp/IFC4/include/IfcDoorLiningProperties.h"
#include "ifcpp/IFC4/include/IfcDoorPanelProperties.h"
#include "ifcpp/IFC4/include/IfcDoorStandardCase.h"
#include "ifcpp/IFC4/include/IfcDoorStyle.h"
#include "ifcpp/IFC4/include/IfcDoorType.h"
#include "ifcpp/IFC4/include/IfcDraughtingPreDefinedColour.h"
#include "ifcpp/IFC4/include/IfcDraughtingPreDefinedCurveFont.h"
#include "ifcpp/IFC4/include/IfcDuctFitting.h"
#include "ifcpp/IFC4/include/IfcDuctFittingType.h"
#include "ifcpp/IFC4/include/IfcDuctSegment.h"
#include "ifcpp/IFC4/include/IfcDuctSegmentType.h"
#include "ifcpp/IFC4/include/IfcDuctSilencer.h"
#include "ifcpp/IFC4/include/IfcDuctSilencerType.h"
#include "ifcpp/IFC4/include/IfcEdge.h"
#include "ifcpp/IFC4/include/IfcEdgeCurve.h"
#include "ifcpp/IFC4/include/IfcEdgeLoop.h"
#include "ifcpp/IFC4/include/IfcElectricAppliance.h"
#include "ifcpp/IFC4/include/IfcElectricApplianceType.h"
#include "ifcpp/IFC4/include/IfcElectricDistributionBoard.h"
#include "ifcpp/IFC4/include/IfcElectricDistributionBoardType.h"
#include "ifcpp/IFC4/include/IfcElectricFlowStorageDevice.h"
#include "ifcpp/IFC4/include/IfcElectricFlowStorageDeviceType.h"
#include "ifcpp/IFC4/include/IfcElectricGenerator.h"
#include "ifcpp/IFC4/include/IfcElectricGeneratorType.h"
#include "ifcpp/IFC4/include/IfcElectricMotor.h"
#include "ifcpp/IFC4/include/IfcElectricMotorType.h"
#include "ifcpp/IFC4/include/IfcElectricTimeControl.h"
#include "ifcpp/IFC4/include/IfcElectricTimeControlType.h"
#include "ifcpp/IFC4/include/IfcElement.h"
#include "ifcpp/IFC4/include/IfcElementAssembly.h"
#include "ifcpp/IFC4/include/IfcElementAssemblyType.h"
#include "ifcpp/IFC4/include/IfcElementComponent.h"
#include "ifcpp/IFC4/include/IfcElementComponentType.h"
#include "ifcpp/IFC4/include/IfcElementQuantity.h"
#include "ifcpp/IFC4/include/IfcElementType.h"
#include "ifcpp/IFC4/include/IfcElementarySurface.h"
#include "ifcpp/IFC4/include/IfcEllipse.h"
#include "ifcpp/IFC4/include/IfcEllipseProfileDef.h"
#include "ifcpp/IFC4/include/IfcEnergyConversionDevice.h"
#include "ifcpp/IFC4/include/IfcEnergyConversionDeviceType.h"
#include "ifcpp/IFC4/include/IfcEngine.h"
#include "ifcpp/IFC4/include/IfcEngineType.h"
#include "ifcpp/IFC4/include/IfcEvaporativeCooler.h"
#include "ifcpp/IFC4/include/IfcEvaporativeCoolerType.h"
#include "ifcpp/IFC4/include/IfcEvaporator.h"
#include "ifcpp/IFC4/include/IfcEvaporatorType.h"
#include "ifcpp/IFC4/include/IfcEvent.h"
#include "ifcpp/IFC4/include/IfcEventTime.h"
#include "ifcpp/IFC4/include/IfcEventType.h"
#include "ifcpp/IFC4/include/IfcExtendedProperties.h"
#include "ifcpp/IFC4/include/IfcExternalInformation.h"
#include "ifcpp/IFC4/include/IfcExternalReference.h"
#include "ifcpp/IFC4/include/IfcExternalReferenceRelationship.h"
#include "ifcpp/IFC4/include/IfcExternalSpatialElement.h"
#include "ifcpp/IFC4/include/IfcExternalSpatialStructureElement.h"
#include "ifcpp/IFC4/include/IfcExternallyDefinedHatchStyle.h"
#include "ifcpp/IFC4/include/IfcExternallyDefinedSurfaceStyle.h"
#include "ifcpp/IFC4/include/IfcExternallyDefinedTextFont.h"
#include "ifcpp/IFC4/include/IfcExtrudedAreaSolid.h"
#include "ifcpp/IFC4/include/IfcExtrudedAreaSolidTapered.h"
#include "ifcpp/IFC4/include/IfcFace.h"
#include "ifcpp/IFC4/include/IfcFaceBasedSurfaceModel.h"
#include "ifcpp/IFC4/include/IfcFaceBound.h"
#include "ifcpp/IFC4/include/IfcFaceOuterBound.h"
#include "ifcpp/IFC4/include/IfcFaceSurface.h"
#include "ifcpp/IFC4/include/IfcFacetedBrep.h"
#include "ifcpp/IFC4/include/IfcFacetedBrepWithVoids.h"
#include "ifcpp/IFC4/include/IfcFailureConnectionCondition.h"
#include "ifcpp/IFC4/include/IfcFan.h"
#include "ifcpp/IFC4/include/IfcFanType.h"
#include "ifcpp/IFC4/include/IfcFastener.h"
#include "ifcpp/IFC4/include/IfcFastenerType.h"
#include "ifcpp/IFC4/include/IfcFeatureElement.h"
#include "ifcpp/IFC4/include/IfcFeatureElementAddition.h"
#include "ifcpp/IFC4/include/IfcFeatureElementSubtraction.h"
#include "ifcpp/IFC4/include/IfcFillAreaStyle.h"
#include "ifcpp/IFC4/include/IfcFillAreaStyleHatching.h"
#include "ifcpp/IFC4/include/IfcFillAreaStyleTiles.h"
#include "ifcpp/IFC4/include/IfcFilter.h"
#include "ifcpp/IFC4/include/IfcFilterType.h"
#include "ifcpp/IFC4/include/IfcFireSuppressionTerminal.h"
#include "ifcpp/IFC4/include/IfcFireSuppressionTerminalType.h"
#include "ifcpp/IFC4/include/IfcFixedReferenceSweptAreaSolid.h"
#include "ifcpp/IFC4/include/IfcFlowController.h"
#include "ifcpp/IFC4/include/IfcFlowControllerType.h"
#include "ifcpp/IFC4/include/IfcFlowFitting.h"
#include "ifcpp/IFC4/include/IfcFlowFittingType.h"
#include "ifcpp/IFC4/include/IfcFlowInstrument.h"
#include "ifcpp/IFC4/include/IfcFlowInstrumentType.h"
#include "ifcpp/IFC4/include/IfcFlowMeter.h"
#include "ifcpp/IFC4/include/IfcFlowMeterType.h"
#include "ifcpp/IFC4/include/IfcFlowMovingDevice.h"
#include "ifcpp/IFC4/include/IfcFlowMovingDeviceType.h"
#include "ifcpp/IFC4/include/IfcFlowSegment.h"
#include "ifcpp/IFC4/include/IfcFlowSegmentType.h"
#include "ifcpp/IFC4/include/IfcFlowStorageDevice.h"
#include "ifcpp/IFC4/include/IfcFlowStorageDeviceType.h"
#include "ifcpp/IFC4/include/IfcFlowTerminal.h"
#include "ifcpp/IFC4/include/IfcFlowTerminalType.h"
#include "ifcpp/IFC4/include/IfcFlowTreatmentDevice.h"
#include "ifcpp/IFC4/include/IfcFlowTreatmentDeviceType.h"
#include "ifcpp/IFC4/include/IfcFooting.h"
#include "ifcpp/IFC4/include/IfcFootingType.h"
#include "ifcpp/IFC4/include/IfcFurnishingElement.h"
#include "ifcpp/IFC4/include/IfcFurnishingElementType.h"
#include "ifcpp/IFC4/include/IfcFurniture.h"
#include "ifcpp/IFC4/include/IfcFurnitureType.h"
#include "ifcpp/IFC4/include/IfcGeographicElement.h"
#include "ifcpp/IFC4/include/IfcGeographicElementType.h"
#include "ifcpp/IFC4/include/IfcGeometricCurveSet.h"
#include "ifcpp/IFC4/include/IfcGeometricRepresentationContext.h"
#include "ifcpp/IFC4/include/IfcGeometricRepresentationItem.h"
#include "ifcpp/IFC4/include/IfcGeometricRepresentationSubContext.h"
#include "ifcpp/IFC4/include/IfcGeometricSet.h"
#include "ifcpp/IFC4/include/IfcGrid.h"
#include "ifcpp/IFC4/include/IfcGridAxis.h"
#include "ifcpp/IFC4/include/IfcGridPlacement.h"
#include "ifcpp/IFC4/include/IfcGroup.h"
#include "ifcpp/IFC4/include/IfcHalfSpaceSolid.h"
#include "ifcpp/IFC4/include/IfcHeatExchanger.h"
#include "ifcpp/IFC4/include/IfcHeatExchangerType.h"
#include "ifcpp/IFC4/include/IfcHumidifier.h"
#include "ifcpp/IFC4/include/IfcHumidifierType.h"
#include "ifcpp/IFC4/include/IfcIShapeProfileDef.h"
#include "ifcpp/IFC4/include/IfcImageTexture.h"
#include "ifcpp/IFC4/include/IfcIndexedColourMap.h"
#include "ifcpp/IFC4/include/IfcIndexedPolyCurve.h"
#include "ifcpp/IFC4/include/IfcIndexedPolygonalFace.h"
#include "ifcpp/IFC4/include/IfcIndexedPolygonalFaceWithVoids.h"
#include "ifcpp/IFC4/include/IfcIndexedTextureMap.h"
#include "ifcpp/IFC4/include/IfcIndexedTriangleTextureMap.h"
#include "ifcpp/IFC4/include/IfcInterceptor.h"
#include "ifcpp/IFC4/include/IfcInterceptorType.h"
#include "ifcpp/IFC4/include/IfcIntersectionCurve.h"
#include "ifcpp/IFC4/include/IfcInventory.h"
#include "ifcpp/IFC4/include/IfcIrregularTimeSeries.h"
#include "ifcpp/IFC4/include/IfcIrregularTimeSeriesValue.h"
#include "ifcpp/IFC4/include/IfcJunctionBox.h"
#include "ifcpp/IFC4/include/IfcJunctionBoxType.h"
#include "ifcpp/IFC4/include/IfcLShapeProfileDef.h"
#include "ifcpp/IFC4/include/IfcLaborResource.h"
#include "ifcpp/IFC4/include/IfcLaborResourceType.h"
#include "ifcpp/IFC4/include/IfcLagTime.h"
#include "ifcpp/IFC4/include/IfcLamp.h"
#include "ifcpp/IFC4/include/IfcLampType.h"
#include "ifcpp/IFC4/include/IfcLibraryInformation.h"
#include "ifcpp/IFC4/include/IfcLibraryReference.h"
#include "ifcpp/IFC4/include/IfcLightDistributionData.h"
#include "ifcpp/IFC4/include/IfcLightFixture.h"
#include "ifcpp/IFC4/include/IfcLightFixtureType.h"
#include "ifcpp/IFC4/include/IfcLightIntensityDistribution.h"
#include "ifcpp/IFC4/include/IfcLightSource.h"
#include "ifcpp/IFC4/include/IfcLightSourceAmbient.h"
#include "ifcpp/IFC4/include/IfcLightSourceDirectional.h"
#include "ifcpp/IFC4/include/IfcLightSourceGoniometric.h"
#include "ifcpp/IFC4/include/IfcLightSourcePositional.h"
#include "ifcpp/IFC4/include/IfcLightSourceSpot.h"
#include "ifcpp/IFC4/include/IfcLine.h"
#include "ifcpp/IFC4/include/IfcLocalPlacement.h"
#include "ifcpp/IFC4/include/IfcLoop.h"
#include "ifcpp/IFC4/include/IfcManifoldSolidBrep.h"
#include "ifcpp/IFC4/include/IfcMapConversion.h"
#include "ifcpp/IFC4/include/IfcMappedItem.h"
#include "ifcpp/IFC4/include/IfcMaterial.h"
#include "ifcpp/IFC4/include/IfcMaterialClassificationRelationship.h"
#include "ifcpp/IFC4/include/IfcMaterialConstituent.h"
#include "ifcpp/IFC4/include/IfcMaterialConstituentSet.h"
#include "ifcpp/IFC4/include/IfcMaterialDefinition.h"
#include "ifcpp/IFC4/include/IfcMaterialDefinitionRepresentation.h"
#include "ifcpp/IFC4/include/IfcMaterialLayer.h"
#include "ifcpp/IFC4/include/IfcMaterialLayerSet.h"
#include "ifcpp/IFC4/include/IfcMaterialLayerSetUsage.h"
#include "ifcpp/IFC4/include/IfcMaterialLayerWithOffsets.h"
#include "ifcpp/IFC4/include/IfcMaterialList.h"
#include "ifcpp/IFC4/include/IfcMaterialProfile.h"
#include "ifcpp/IFC4/include/IfcMaterialProfileSet.h"
#include "ifcpp/IFC4/include/IfcMaterialProfileSetUsage.h"
#include "ifcpp/IFC4/include/IfcMaterialProfileSetUsageTapering.h"
#include "ifcpp/IFC4/include/IfcMaterialProfileWithOffsets.h"
#include "ifcpp/IFC4/include/IfcMaterialProperties.h"
#include "ifcpp/IFC4/include/IfcMaterialRelationship.h"
#include "ifcpp/IFC4/include/IfcMaterialUsageDefinition.h"
#include "ifcpp/IFC4/include/IfcMeasureWithUnit.h"
#include "ifcpp/IFC4/include/IfcMechanicalFastener.h"
#include "ifcpp/IFC4/include/IfcMechanicalFastenerType.h"
#include "ifcpp/IFC4/include/IfcMedicalDevice.h"
#include "ifcpp/IFC4/include/IfcMedicalDeviceType.h"
#include "ifcpp/IFC4/include/IfcMember.h"
#include "ifcpp/IFC4/include/IfcMemberStandardCase.h"
#include "ifcpp/IFC4/include/IfcMemberType.h"
#include "ifcpp/IFC4/include/IfcMetric.h"
#include "ifcpp/IFC4/include/IfcMirroredProfileDef.h"
#include "ifcpp/IFC4/include/IfcMonetaryUnit.h"
#include "ifcpp/IFC4/include/IfcMotorConnection.h"
#include "ifcpp/IFC4/include/IfcMotorConnectionType.h"
#include "ifcpp/IFC4/include/IfcNamedUnit.h"
#include "ifcpp/IFC4/include/IfcObject.h"
#include "ifcpp/IFC4/include/IfcObjectDefinition.h"
#include "ifcpp/IFC4/include/IfcObjectPlacement.h"
#include "ifcpp/IFC4/include/IfcObjective.h"
#include "ifcpp/IFC4/include/IfcOccupant.h"
#include "ifcpp/IFC4/include/IfcOffsetCurve2D.h"
#include "ifcpp/IFC4/include/IfcOffsetCurve3D.h"
#include "ifcpp/IFC4/include/IfcOpenShell.h"
#include "ifcpp/IFC4/include/IfcOpeningElement.h"
#include "ifcpp/IFC4/include/IfcOpeningStandardCase.h"
#include "ifcpp/IFC4/include/IfcOrganization.h"
#include "ifcpp/IFC4/include/IfcOrganizationRelationship.h"
#include "ifcpp/IFC4/include/IfcOrientedEdge.h"
#include "ifcpp/IFC4/include/IfcOuterBoundaryCurve.h"
#include "ifcpp/IFC4/include/IfcOutlet.h"
#include "ifcpp/IFC4/include/IfcOutletType.h"
#include "ifcpp/IFC4/include/IfcOwnerHistory.h"
#include "ifcpp/IFC4/include/IfcParameterizedProfileDef.h"
#include "ifcpp/IFC4/include/IfcPath.h"
#include "ifcpp/IFC4/include/IfcPcurve.h"
#include "ifcpp/IFC4/include/IfcPerformanceHistory.h"
#include "ifcpp/IFC4/include/IfcPermeableCoveringProperties.h"
#include "ifcpp/IFC4/include/IfcPermit.h"
#include "ifcpp/IFC4/include/IfcPerson.h"
#include "ifcpp/IFC4/include/IfcPersonAndOrganization.h"
#include "ifcpp/IFC4/include/IfcPhysicalComplexQuantity.h"
#include "ifcpp/IFC4/include/IfcPhysicalQuantity.h"
#include "ifcpp/IFC4/include/IfcPhysicalSimpleQuantity.h"
#include "ifcpp/IFC4/include/IfcPile.h"
#include "ifcpp/IFC4/include/IfcPileType.h"
#include "ifcpp/IFC4/include/IfcPipeFitting.h"
#include "ifcpp/IFC4/include/IfcPipeFittingType.h"
#include "ifcpp/IFC4/include/IfcPipeSegment.h"
#include "ifcpp/IFC4/include/IfcPipeSegmentType.h"
#include "ifcpp/IFC4/include/IfcPixelTexture.h"
#include "ifcpp/IFC4/include/IfcPlacement.h"
#include "ifcpp/IFC4/include/IfcPlanarBox.h"
#include "ifcpp/IFC4/include/IfcPlanarExtent.h"
#include "ifcpp/IFC4/include/IfcPlane.h"
#include "ifcpp/IFC4/include/IfcPlate.h"
#include "ifcpp/IFC4/include/IfcPlateStandardCase.h"
#include "ifcpp/IFC4/include/IfcPlateType.h"
#include "ifcpp/IFC4/include/IfcPoint.h"
#include "ifcpp/IFC4/include/IfcPointOnCurve.h"
#include "ifcpp/IFC4/include/IfcPointOnSurface.h"
#include "ifcpp/IFC4/include/IfcPolyLoop.h"
#include "ifcpp/IFC4/include/IfcPolygonalBoundedHalfSpace.h"
#include "ifcpp/IFC4/include/IfcPolygonalFaceSet.h"
#include "ifcpp/IFC4/include/IfcPolyline.h"
#include "ifcpp/IFC4/include/IfcPort.h"
#include "ifcpp/IFC4/include/IfcPostalAddress.h"
#include "ifcpp/IFC4/include/IfcPreDefinedColour.h"
#include "ifcpp/IFC4/include/IfcPreDefinedCurveFont.h"
#include "ifcpp/IFC4/include/IfcPreDefinedItem.h"
#include "ifcpp/IFC4/include/IfcPreDefinedProperties.h"
#include "ifcpp/IFC4/include/IfcPreDefinedPropertySet.h"
#include "ifcpp/IFC4/include/IfcPreDefinedTextFont.h"
#include "ifcpp/IFC4/include/IfcPresentationItem.h"
#include "ifcpp/IFC4/include/IfcPresentationLayerAssignment.h"
#include "ifcpp/IFC4/include/IfcPresentationLayerWithStyle.h"
#include "ifcpp/IFC4/include/IfcPresentationStyle.h"
#include "ifcpp/IFC4/include/IfcPresentationStyleAssignment.h"
#include "ifcpp/IFC4/include/IfcProcedure.h"
#include "ifcpp/IFC4/include/IfcProcedureType.h"
#include "ifcpp/IFC4/include/IfcProcess.h"
#include "ifcpp/IFC4/include/IfcProduct.h"
#include "ifcpp/IFC4/include/IfcProductDefinitionShape.h"
#include "ifcpp/IFC4/include/IfcProductRepresentation.h"
#include "ifcpp/IFC4/include/IfcProfileDef.h"
#include "ifcpp/IFC4/include/IfcProfileProperties.h"
#include "ifcpp/IFC4/include/IfcProject.h"
#include "ifcpp/IFC4/include/IfcProjectLibrary.h"
#include "ifcpp/IFC4/include/IfcProjectOrder.h"
#include "ifcpp/IFC4/include/IfcProjectedCRS.h"
#include "ifcpp/IFC4/include/IfcProjectionElement.h"
#include "ifcpp/IFC4/include/IfcProperty.h"
#include "ifcpp/IFC4/include/IfcPropertyAbstraction.h"
#include "ifcpp/IFC4/include/IfcPropertyBoundedValue.h"
#include "ifcpp/IFC4/include/IfcPropertyDefinition.h"
#include "ifcpp/IFC4/include/IfcPropertyDependencyRelationship.h"
#include "ifcpp/IFC4/include/IfcPropertyEnumeratedValue.h"
#include "ifcpp/IFC4/include/IfcPropertyEnumeration.h"
#include "ifcpp/IFC4/include/IfcPropertyListValue.h"
#include "ifcpp/IFC4/include/IfcPropertyReferenceValue.h"
#include "ifcpp/IFC4/include/IfcPropertySet.h"
#include "ifcpp/IFC4/include/IfcPropertySetDefinition.h"
#include "ifcpp/IFC4/include/IfcPropertySetTemplate.h"
#include "ifcpp/IFC4/include/IfcPropertySingleValue.h"
#include "ifcpp/IFC4/include/IfcPropertyTableValue.h"
#include "ifcpp/IFC4/include/IfcPropertyTemplate.h"
#include "ifcpp/IFC4/include/IfcPropertyTemplateDefinition.h"
#include "ifcpp/IFC4/include/IfcProtectiveDevice.h"
#include "ifcpp/IFC4/include/IfcProtectiveDeviceTrippingUnit.h"
#include "ifcpp/IFC4/include/IfcProtectiveDeviceTrippingUnitType.h"
#include "ifcpp/IFC4/include/IfcProtectiveDeviceType.h"
#include "ifcpp/IFC4/include/IfcProxy.h"
#include "ifcpp/IFC4/include/IfcPump.h"
#include "ifcpp/IFC4/include/IfcPumpType.h"
#include "ifcpp/IFC4/include/IfcQuantityArea.h"
#include "ifcpp/IFC4/include/IfcQuantityCount.h"
#include "ifcpp/IFC4/include/IfcQuantityLength.h"
#include "ifcpp/IFC4/include/IfcQuantitySet.h"
#include "ifcpp/IFC4/include/IfcQuantityTime.h"
#include "ifcpp/IFC4/include/IfcQuantityVolume.h"
#include "ifcpp/IFC4/include/IfcQuantityWeight.h"
#include "ifcpp/IFC4/include/IfcRailing.h"
#include "ifcpp/IFC4/include/IfcRailingType.h"
#include "ifcpp/IFC4/include/IfcRamp.h"
#include "ifcpp/IFC4/include/IfcRampFlight.h"
#include "ifcpp/IFC4/include/IfcRampFlightType.h"
#include "ifcpp/IFC4/include/IfcRampType.h"
#include "ifcpp/IFC4/include/IfcRationalBSplineCurveWithKnots.h"
#include "ifcpp/IFC4/include/IfcRationalBSplineSurfaceWithKnots.h"
#include "ifcpp/IFC4/include/IfcRectangleHollowProfileDef.h"
#include "ifcpp/IFC4/include/IfcRectangleProfileDef.h"
#include "ifcpp/IFC4/include/IfcRectangularPyramid.h"
#include "ifcpp/IFC4/include/IfcRectangularTrimmedSurface.h"
#include "ifcpp/IFC4/include/IfcRecurrencePattern.h"
#include "ifcpp/IFC4/include/IfcReference.h"
#include "ifcpp/IFC4/include/IfcRegularTimeSeries.h"
#include "ifcpp/IFC4/include/IfcReinforcementBarProperties.h"
#include "ifcpp/IFC4/include/IfcReinforcementDefinitionProperties.h"
#include "ifcpp/IFC4/include/IfcReinforcingBar.h"
#include "ifcpp/IFC4/include/IfcReinforcingBarType.h"
#include "ifcpp/IFC4/include/IfcReinforcingElement.h"
#include "ifcpp/IFC4/include/IfcReinforcingElementType.h"
#include "ifcpp/IFC4/include/IfcReinforcingMesh.h"
#include "ifcpp/IFC4/include/IfcReinforcingMeshType.h"
#include "ifcpp/IFC4/include/IfcRelAggregates.h"
#include "ifcpp/IFC4/include/IfcRelAssigns.h"
#include "ifcpp/IFC4/include/IfcRelAssignsToActor.h"
#include "ifcpp/IFC4/include/IfcRelAssignsToControl.h"
#include "ifcpp/IFC4/include/IfcRelAssignsToGroup.h"
#include "ifcpp/IFC4/include/IfcRelAssignsToGroupByFactor.h"
#include "ifcpp/IFC4/include/IfcRelAssignsToProcess.h"
#include "ifcpp/IFC4/include/IfcRelAssignsToProduct.h"
#include "ifcpp/IFC4/include/IfcRelAssignsToResource.h"
#include "ifcpp/IFC4/include/IfcRelAssociates.h"
#include "ifcpp/IFC4/include/IfcRelAssociatesApproval.h"
#include "ifcpp/IFC4/include/IfcRelAssociatesClassification.h"
#include "ifcpp/IFC4/include/IfcRelAssociatesConstraint.h"
#include "ifcpp/IFC4/include/IfcRelAssociatesDocument.h"
#include "ifcpp/IFC4/include/IfcRelAssociatesLibrary.h"
#include "ifcpp/IFC4/include/IfcRelAssociatesMaterial.h"
#include "ifcpp/IFC4/include/IfcRelConnects.h"
#include "ifcpp/IFC4/include/IfcRelConnectsElements.h"
#include "ifcpp/IFC4/include/IfcRelConnectsPathElements.h"
#include "ifcpp/IFC4/include/IfcRelConnectsPortToElement.h"
#include "ifcpp/IFC4/include/IfcRelConnectsPorts.h"
#include "ifcpp/IFC4/include/IfcRelConnectsStructuralActivity.h"
#include "ifcpp/IFC4/include/IfcRelConnectsStructuralMember.h"
#include "ifcpp/IFC4/include/IfcRelConnectsWithEccentricity.h"
#include "ifcpp/IFC4/include/IfcRelConnectsWithRealizingElements.h"
#include "ifcpp/IFC4/include/IfcRelContainedInSpatialStructure.h"
#include "ifcpp/IFC4/include/IfcRelCoversBldgElements.h"
#include "ifcpp/IFC4/include/IfcRelCoversSpaces.h"
#include "ifcpp/IFC4/include/IfcRelDeclares.h"
#include "ifcpp/IFC4/include/IfcRelDecomposes.h"
#include "ifcpp/IFC4/include/IfcRelDefines.h"
#include "ifcpp/IFC4/include/IfcRelDefinesByObject.h"
#include "ifcpp/IFC4/include/IfcRelDefinesByProperties.h"
#include "ifcpp/IFC4/include/IfcRelDefinesByTemplate.h"
#include "ifcpp/IFC4/include/IfcRelDefinesByType.h"
#include "ifcpp/IFC4/include/IfcRelFillsElement.h"
#include "ifcpp/IFC4/include/IfcRelFlowControlElements.h"
#include "ifcpp/IFC4/include/IfcRelInterferesElements.h"
#include "ifcpp/IFC4/include/IfcRelNests.h"
#include "ifcpp/IFC4/include/IfcRelProjectsElement.h"
#include "ifcpp/IFC4/include/IfcRelReferencedInSpatialStructure.h"
#include "ifcpp/IFC4/include/IfcRelSequence.h"
#include "ifcpp/IFC4/include/IfcRelServicesBuildings.h"
#include "ifcpp/IFC4/include/IfcRelSpaceBoundary.h"
#include "ifcpp/IFC4/include/IfcRelSpaceBoundary1stLevel.h"
#include "ifcpp/IFC4/include/IfcRelSpaceBoundary2ndLevel.h"
#include "ifcpp/IFC4/include/IfcRelVoidsElement.h"
#include "ifcpp/IFC4/include/IfcRelationship.h"
#include "ifcpp/IFC4/include/IfcReparametrisedCompositeCurveSegment.h"
#include "ifcpp/IFC4/include/IfcRepresentation.h"
#include "ifcpp/IFC4/include/IfcRepresentationContext.h"
#include "ifcpp/IFC4/include/IfcRepresentationItem.h"
#include "ifcpp/IFC4/include/IfcRepresentationMap.h"
#include "ifcpp/IFC4/include/IfcResource.h"
#include "ifcpp/IFC4/include/IfcResourceApprovalRelationship.h"
#include "ifcpp/IFC4/include/IfcResourceConstraintRelationship.h"
#include "ifcpp/IFC4/include/IfcResourceLevelRelationship.h"
#include "ifcpp/IFC4/include/IfcResourceTime.h"
#include "ifcpp/IFC4/include/IfcRevolvedAreaSolid.h"
#include "ifcpp/IFC4/include/IfcRevolvedAreaSolidTapered.h"
#include "ifcpp/IFC4/include/IfcRightCircularCone.h"
#include "ifcpp/IFC4/include/IfcRightCircularCylinder.h"
#include "ifcpp/IFC4/include/IfcRoof.h"
#include "ifcpp/IFC4/include/IfcRoofType.h"
#include "ifcpp/IFC4/include/IfcRoot.h"
#include "ifcpp/IFC4/include/IfcRoundedRectangleProfileDef.h"
#include "ifcpp/IFC4/include/IfcSIUnit.h"
#include "ifcpp/IFC4/include/IfcSanitaryTerminal.h"
#include "ifcpp/IFC4/include/IfcSanitaryTerminalType.h"
#include "ifcpp/IFC4/include/IfcSchedulingTime.h"
#include "ifcpp/IFC4/include/IfcSeamCurve.h"
#include "ifcpp/IFC4/include/IfcSectionProperties.h"
#include "ifcpp/IFC4/include/IfcSectionReinforcementProperties.h"
#include "ifcpp/IFC4/include/IfcSectionedSpine.h"
#include "ifcpp/IFC4/include/IfcSensor.h"
#include "ifcpp/IFC4/include/IfcSensorType.h"
#include "ifcpp/IFC4/include/IfcShadingDevice.h"
#include "ifcpp/IFC4/include/IfcShadingDeviceType.h"
#include "ifcpp/IFC4/include/IfcShapeAspect.h"
#include "ifcpp/IFC4/include/IfcShapeModel.h"
#include "ifcpp/IFC4/include/IfcShapeRepresentation.h"
#include "ifcpp/IFC4/include/IfcShellBasedSurfaceModel.h"
#include "ifcpp/IFC4/include/IfcSimpleProperty.h"
#include "ifcpp/IFC4/include/IfcSimplePropertyTemplate.h"
#include "ifcpp/IFC4/include/IfcSite.h"
#include "ifcpp/IFC4/include/IfcSlab.h"
#include "ifcpp/IFC4/include/IfcSlabElementedCase.h"
#include "ifcpp/IFC4/include/IfcSlabStandardCase.h"
#include "ifcpp/IFC4/include/IfcSlabType.h"
#include "ifcpp/IFC4/include/IfcSlippageConnectionCondition.h"
#include "ifcpp/IFC4/include/IfcSolarDevice.h"
#include "ifcpp/IFC4/include/IfcSolarDeviceType.h"
#include "ifcpp/IFC4/include/IfcSolidModel.h"
#include "ifcpp/IFC4/include/IfcSpace.h"
#include "ifcpp/IFC4/include/IfcSpaceHeater.h"
#include "ifcpp/IFC4/include/IfcSpaceHeaterType.h"
#include "ifcpp/IFC4/include/IfcSpaceType.h"
#include "ifcpp/IFC4/include/IfcSpatialElement.h"
#include "ifcpp/IFC4/include/IfcSpatialElementType.h"
#include "ifcpp/IFC4/include/IfcSpatialStructureElement.h"
#include "ifcpp/IFC4/include/IfcSpatialStructureElementType.h"
#include "ifcpp/IFC4/include/IfcSpatialZone.h"
#include "ifcpp/IFC4/include/IfcSpatialZoneType.h"
#include "ifcpp/IFC4/include/IfcSphere.h"
#include "ifcpp/IFC4/include/IfcSphericalSurface.h"
#include "ifcpp/IFC4/include/IfcStackTerminal.h"
#include "ifcpp/IFC4/include/IfcStackTerminalType.h"
#include "ifcpp/IFC4/include/IfcStair.h"
#include "ifcpp/IFC4/include/IfcStairFlight.h"
#include "ifcpp/IFC4/include/IfcStairFlightType.h"
#include "ifcpp/IFC4/include/IfcStairType.h"
#include "ifcpp/IFC4/include/IfcStructuralAction.h"
#include "ifcpp/IFC4/include/IfcStructuralActivity.h"
#include "ifcpp/IFC4/include/IfcStructuralAnalysisModel.h"
#include "ifcpp/IFC4/include/IfcStructuralConnection.h"
#include "ifcpp/IFC4/include/IfcStructuralConnectionCondition.h"
#include "ifcpp/IFC4/include/IfcStructuralCurveAction.h"
#include "ifcpp/IFC4/include/IfcStructuralCurveConnection.h"
#include "ifcpp/IFC4/include/IfcStructuralCurveMember.h"
#include "ifcpp/IFC4/include/IfcStructuralCurveMemberVarying.h"
#include "ifcpp/IFC4/include/IfcStructuralCurveReaction.h"
#include "ifcpp/IFC4/include/IfcStructuralItem.h"
#include "ifcpp/IFC4/include/IfcStructuralLinearAction.h"
#include "ifcpp/IFC4/include/IfcStructuralLoad.h"
#include "ifcpp/IFC4/include/IfcStructuralLoadCase.h"
#include "ifcpp/IFC4/include/IfcStructuralLoadConfiguration.h"
#include "ifcpp/IFC4/include/IfcStructuralLoadGroup.h"
#include "ifcpp/IFC4/include/IfcStructuralLoadLinearForce.h"
#include "ifcpp/IFC4/include/IfcStructuralLoadOrResult.h"
#include "ifcpp/IFC4/include/IfcStructuralLoadPlanarForce.h"
#include "ifcpp/IFC4/include/IfcStructuralLoadSingleDisplacement.h"
#include "ifcpp/IFC4/include/IfcStructuralLoadSingleDisplacementDistortion.h"
#include "ifcpp/IFC4/include/IfcStructuralLoadSingleForce.h"
#include "ifcpp/IFC4/include/IfcStructuralLoadSingleForceWarping.h"
#include "ifcpp/IFC4/include/IfcStructuralLoadStatic.h"
#include "ifcpp/IFC4/include/IfcStructuralLoadTemperature.h"
#include "ifcpp/IFC4/include/IfcStructuralMember.h"
#include "ifcpp/IFC4/include/IfcStructuralPlanarAction.h"
#include "ifcpp/IFC4/include/IfcStructuralPointAction.h"
#include "ifcpp/IFC4/include/IfcStructuralPointConnection.h"
#include "ifcpp/IFC4/include/IfcStructuralPointReaction.h"
#include "ifcpp/IFC4/include/IfcStructuralReaction.h"
#include "ifcpp/IFC4/include/IfcStructuralResultGroup.h"
#include "ifcpp/IFC4/include/IfcStructuralSurfaceAction.h"
#include "ifcpp/IFC4/include/IfcStructuralSurfaceConnection.h"
#include "ifcpp/IFC4/include/IfcStructuralSurfaceMember.h"
#include "ifcpp/IFC4/include/IfcStructuralSurfaceMemberVarying.h"
#include "ifcpp/IFC4/include/IfcStructuralSurfaceReaction.h"
#include "ifcpp/IFC4/include/IfcStyleModel.h"
#include "ifcpp/IFC4/include/IfcStyledItem.h"
#include "ifcpp/IFC4/include/IfcStyledRepresentation.h"
#include "ifcpp/IFC4/include/IfcSubContractResource.h"
#include "ifcpp/IFC4/include/IfcSubContractResourceType.h"
#include "ifcpp/IFC4/include/IfcSubedge.h"
#include "ifcpp/IFC4/include/IfcSurface.h"
#include "ifcpp/IFC4/include/IfcSurfaceCurve.h"
#include "ifcpp/IFC4/include/IfcSurfaceCurveSweptAreaSolid.h"
#include "ifcpp/IFC4/include/IfcSurfaceFeature.h"
#include "ifcpp/IFC4/include/IfcSurfaceOfLinearExtrusion.h"
#include "ifcpp/IFC4/include/IfcSurfaceOfRevolution.h"
#include "ifcpp/IFC4/include/IfcSurfaceReinforcementArea.h"
#include "ifcpp/IFC4/include/IfcSurfaceStyle.h"
#include "ifcpp/IFC4/include/IfcSurfaceStyleLighting.h"
#include "ifcpp/IFC4/include/IfcSurfaceStyleRefraction.h"
#include "ifcpp/IFC4/include/IfcSurfaceStyleRendering.h"
#include "ifcpp/IFC4/include/IfcSurfaceStyleShading.h"
#include "ifcpp/IFC4/include/IfcSurfaceStyleWithTextures.h"
#include "ifcpp/IFC4/include/IfcSurfaceTexture.h"
#include "ifcpp/IFC4/include/IfcSweptAreaSolid.h"
#include "ifcpp/IFC4/include/IfcSweptDiskSolid.h"
#include "ifcpp/IFC4/include/IfcSweptDiskSolidPolygonal.h"
#include "ifcpp/IFC4/include/IfcSweptSurface.h"
#include "ifcpp/IFC4/include/IfcSwitchingDevice.h"
#include "ifcpp/IFC4/include/IfcSwitchingDeviceType.h"
#include "ifcpp/IFC4/include/IfcSystem.h"
#include "ifcpp/IFC4/include/IfcSystemFurnitureElement.h"
#include "ifcpp/IFC4/include/IfcSystemFurnitureElementType.h"
#include "ifcpp/IFC4/include/IfcTShapeProfileDef.h"
#include "ifcpp/IFC4/include/IfcTable.h"
#include "ifcpp/IFC4/include/IfcTableColumn.h"
#include "ifcpp/IFC4/include/IfcTableRow.h"
#include "ifcpp/IFC4/include/IfcTank.h"
#include "ifcpp/IFC4/include/IfcTankType.h"
#include "ifcpp/IFC4/include/IfcTask.h"
#include "ifcpp/IFC4/include/IfcTaskTime.h"
#include "ifcpp/IFC4/include/IfcTaskTimeRecurring.h"
#include "ifcpp/IFC4/include/IfcTaskType.h"
#include "ifcpp/IFC4/include/IfcTelecomAddress.h"
#include "ifcpp/IFC4/include/IfcTendon.h"
#include "ifcpp/IFC4/include/IfcTendonAnchor.h"
#include "ifcpp/IFC4/include/IfcTendonAnchorType.h"
#include "ifcpp/IFC4/include/IfcTendonType.h"
#include "ifcpp/IFC4/include/IfcTessellatedFaceSet.h"
#include "ifcpp/IFC4/include/IfcTessellatedItem.h"
#include "ifcpp/IFC4/include/IfcTextLiteral.h"
#include "ifcpp/IFC4/include/IfcTextLiteralWithExtent.h"
#include "ifcpp/IFC4/include/IfcTextStyle.h"
#include "ifcpp/IFC4/include/IfcTextStyleFontModel.h"
#include "ifcpp/IFC4/include/IfcTextStyleForDefinedFont.h"
#include "ifcpp/IFC4/include/IfcTextStyleTextModel.h"
#include "ifcpp/IFC4/include/IfcTextureCoordinate.h"
#include "ifcpp/IFC4/include/IfcTextureCoordinateGenerator.h"
#include "ifcpp/IFC4/include/IfcTextureMap.h"
#include "ifcpp/IFC4/include/IfcTextureVertex.h"
#include "ifcpp/IFC4/include/IfcTextureVertexList.h"
#include "ifcpp/IFC4/include/IfcTimePeriod.h"
#include "ifcpp/IFC4/include/IfcTimeSeries.h"
#include "ifcpp/IFC4/include/IfcTimeSeriesValue.h"
#include "ifcpp/IFC4/include/IfcTopologicalRepresentationItem.h"
#include "ifcpp/IFC4/include/IfcTopologyRepresentation.h"
#include "ifcpp/IFC4/include/IfcToroidalSurface.h"
#include "ifcpp/IFC4/include/IfcTransformer.h"
#include "ifcpp/IFC4/include/IfcTransformerType.h"
#include "ifcpp/IFC4/include/IfcTransportElement.h"
#include "ifcpp/IFC4/include/IfcTransportElementType.h"
#include "ifcpp/IFC4/include/IfcTrapeziumProfileDef.h"
#include "ifcpp/IFC4/include/IfcTriangulatedFaceSet.h"
#include "ifcpp/IFC4/include/IfcTrimmedCurve.h"
#include "ifcpp/IFC4/include/IfcTubeBundle.h"
#include "ifcpp/IFC4/include/IfcTubeBundleType.h"
#include "ifcpp/IFC4/include/IfcTypeObject.h"
#include "ifcpp/IFC4/include/IfcTypeProcess.h"
#include "ifcpp/IFC4/include/IfcTypeProduct.h"
#include "ifcpp/IFC4/include/IfcTypeResource.h"
#include "ifcpp/IFC4/include/IfcUShapeProfileDef.h"
#include "ifcpp/IFC4/include/IfcUnitAssignment.h"
#include "ifcpp/IFC4/include/IfcUnitaryControlElement.h"
#include "ifcpp/IFC4/include/IfcUnitaryControlElementType.h"
#include "ifcpp/IFC4/include/IfcUnitaryEquipment.h"
#include "ifcpp/IFC4/include/IfcUnitaryEquipmentType.h"
#include "ifcpp/IFC4/include/IfcValve.h"
#include "ifcpp/IFC4/include/IfcValveType.h"
#include "ifcpp/IFC4/include/IfcVector.h"
#include "ifcpp/IFC4/include/IfcVertex.h"
#include "ifcpp/IFC4/include/IfcVertexLoop.h"
#include "ifcpp/IFC4/include/IfcVertexPoint.h"
#include "ifcpp/IFC4/include/IfcVibrationIsolator.h"
#include "ifcpp/IFC4/include/IfcVibrationIsolatorType.h"
#include "ifcpp/IFC4/include/IfcVirtualElement.h"
#include "ifcpp/IFC4/include/IfcVirtualGridIntersection.h"
#include "ifcpp/IFC4/include/IfcVoidingFeature.h"
#include "ifcpp/IFC4/include/IfcWall.h"
#include "ifcpp/IFC4/include/IfcWallElementedCase.h"
#include "ifcpp/IFC4/include/IfcWallStandardCase.h"
#include "ifcpp/IFC4/include/IfcWallType.h"
#include "ifcpp/IFC4/include/IfcWasteTerminal.h"
#include "ifcpp/IFC4/include/IfcWasteTerminalType.h"
#include "ifcpp/IFC4/include/IfcWindow.h"
#include "ifcpp/IFC4/include/IfcWindowLiningProperties.h"
#include "ifcpp/IFC4/include/IfcWindowPanelProperties.h"
#include "ifcpp/IFC4/include/IfcWindowStandardCase.h"
#include "ifcpp/IFC4/include/IfcWindowStyle.h"
#include "ifcpp/IFC4/include/IfcWindowType.h"
#include "ifcpp/IFC4/include/IfcWorkCalendar.h"
#include "ifcpp/IFC4/include/IfcWorkControl.h"
#include "ifcpp/IFC4/include/IfcWorkPlan.h"
#include "ifcpp/IFC4/include/IfcWorkSchedule.h"
#include "ifcpp/IFC4/include/IfcWorkTime.h"
#include "ifcpp/IFC4/include/IfcZShapeProfileDef.h"
#include "ifcpp/IFC4/include/IfcZone.h"
#include "EntityFactory.h"

	static std::map<std::string, std::function<BuildingEntity*( void )> > entity_factory_map = {
{ "IFCACTIONREQUEST", []( void )->BuildingEntity* { return new IfcActionRequest(); } },
{ "IFCACTOR", []( void )->BuildingEntity* { return new IfcActor(); } },
{ "IFCACTORROLE", []( void )->BuildingEntity* { return new IfcActorRole(); } },
{ "IFCACTUATOR", []( void )->BuildingEntity* { return new IfcActuator(); } },
{ "IFCACTUATORTYPE", []( void )->BuildingEntity* { return new IfcActuatorType(); } },
{ "IFCADDRESS", []( void )->BuildingEntity* { return new IfcAddress(); } },
{ "IFCADVANCEDBREP", []( void )->BuildingEntity* { return new IfcAdvancedBrep(); } },
{ "IFCADVANCEDBREPWITHVOIDS", []( void )->BuildingEntity* { return new IfcAdvancedBrepWithVoids(); } },
{ "IFCADVANCEDFACE", []( void )->BuildingEntity* { return new IfcAdvancedFace(); } },
{ "IFCAIRTERMINAL", []( void )->BuildingEntity* { return new IfcAirTerminal(); } },
{ "IFCAIRTERMINALBOX", []( void )->BuildingEntity* { return new IfcAirTerminalBox(); } },
{ "IFCAIRTERMINALBOXTYPE", []( void )->BuildingEntity* { return new IfcAirTerminalBoxType(); } },
{ "IFCAIRTERMINALTYPE", []( void )->BuildingEntity* { return new IfcAirTerminalType(); } },
{ "IFCAIRTOAIRHEATRECOVERY", []( void )->BuildingEntity* { return new IfcAirToAirHeatRecovery(); } },
{ "IFCAIRTOAIRHEATRECOVERYTYPE", []( void )->BuildingEntity* { return new IfcAirToAirHeatRecoveryType(); } },
{ "IFCALARM", []( void )->BuildingEntity* { return new IfcAlarm(); } },
{ "IFCALARMTYPE", []( void )->BuildingEntity* { return new IfcAlarmType(); } },
{ "IFCANNOTATION", []( void )->BuildingEntity* { return new IfcAnnotation(); } },
{ "IFCANNOTATIONFILLAREA", []( void )->BuildingEntity* { return new IfcAnnotationFillArea(); } },
{ "IFCAPPLICATION", []( void )->BuildingEntity* { return new IfcApplication(); } },
{ "IFCAPPLIEDVALUE", []( void )->BuildingEntity* { return new IfcAppliedValue(); } },
{ "IFCAPPROVAL", []( void )->BuildingEntity* { return new IfcApproval(); } },
{ "IFCAPPROVALRELATIONSHIP", []( void )->BuildingEntity* { return new IfcApprovalRelationship(); } },
{ "IFCARBITRARYCLOSEDPROFILEDEF", []( void )->BuildingEntity* { return new IfcArbitraryClosedProfileDef(); } },
{ "IFCARBITRARYOPENPROFILEDEF", []( void )->BuildingEntity* { return new IfcArbitraryOpenProfileDef(); } },
{ "IFCARBITRARYPROFILEDEFWITHVOIDS", []( void )->BuildingEntity* { return new IfcArbitraryProfileDefWithVoids(); } },
{ "IFCASSET", []( void )->BuildingEntity* { return new IfcAsset(); } },
{ "IFCASYMMETRICISHAPEPROFILEDEF", []( void )->BuildingEntity* { return new IfcAsymmetricIShapeProfileDef(); } },
{ "IFCAUDIOVISUALAPPLIANCE", []( void )->BuildingEntity* { return new IfcAudioVisualAppliance(); } },
{ "IFCAUDIOVISUALAPPLIANCETYPE", []( void )->BuildingEntity* { return new IfcAudioVisualApplianceType(); } },
{ "IFCAXIS1PLACEMENT", []( void )->BuildingEntity* { return new IfcAxis1Placement(); } },
{ "IFCAXIS2PLACEMENT2D", []( void )->BuildingEntity* { return new IfcAxis2Placement2D(); } },
{ "IFCAXIS2PLACEMENT3D", []( void )->BuildingEntity* { return new IfcAxis2Placement3D(); } },
{ "IFCBSPLINECURVE", []( void )->BuildingEntity* { return new IfcBSplineCurve(); } },
{ "IFCBSPLINECURVEWITHKNOTS", []( void )->BuildingEntity* { return new IfcBSplineCurveWithKnots(); } },
{ "IFCBSPLINESURFACE", []( void )->BuildingEntity* { return new IfcBSplineSurface(); } },
{ "IFCBSPLINESURFACEWITHKNOTS", []( void )->BuildingEntity* { return new IfcBSplineSurfaceWithKnots(); } },
{ "IFCBEAM", []( void )->BuildingEntity* { return new IfcBeam(); } },
{ "IFCBEAMSTANDARDCASE", []( void )->BuildingEntity* { return new IfcBeamStandardCase(); } },
{ "IFCBEAMTYPE", []( void )->BuildingEntity* { return new IfcBeamType(); } },
{ "IFCBLOBTEXTURE", []( void )->BuildingEntity* { return new IfcBlobTexture(); } },
{ "IFCBLOCK", []( void )->BuildingEntity* { return new IfcBlock(); } },
{ "IFCBOILER", []( void )->BuildingEntity* { return new IfcBoiler(); } },
{ "IFCBOILERTYPE", []( void )->BuildingEntity* { return new IfcBoilerType(); } },
{ "IFCBOOLEANCLIPPINGRESULT", []( void )->BuildingEntity* { return new IfcBooleanClippingResult(); } },
{ "IFCBOOLEANRESULT", []( void )->BuildingEntity* { return new IfcBooleanResult(); } },
{ "IFCBOUNDARYCONDITION", []( void )->BuildingEntity* { return new IfcBoundaryCondition(); } },
{ "IFCBOUNDARYCURVE", []( void )->BuildingEntity* { return new IfcBoundaryCurve(); } },
{ "IFCBOUNDARYEDGECONDITION", []( void )->BuildingEntity* { return new IfcBoundaryEdgeCondition(); } },
{ "IFCBOUNDARYFACECONDITION", []( void )->BuildingEntity* { return new IfcBoundaryFaceCondition(); } },
{ "IFCBOUNDARYNODECONDITION", []( void )->BuildingEntity* { return new IfcBoundaryNodeCondition(); } },
{ "IFCBOUNDARYNODECONDITIONWARPING", []( void )->BuildingEntity* { return new IfcBoundaryNodeConditionWarping(); } },
{ "IFCBOUNDEDCURVE", []( void )->BuildingEntity* { return new IfcBoundedCurve(); } },
{ "IFCBOUNDEDSURFACE", []( void )->BuildingEntity* { return new IfcBoundedSurface(); } },
{ "IFCBOUNDINGBOX", []( void )->BuildingEntity* { return new IfcBoundingBox(); } },
{ "IFCBOXEDHALFSPACE", []( void )->BuildingEntity* { return new IfcBoxedHalfSpace(); } },
{ "IFCBUILDING", []( void )->BuildingEntity* { return new IfcBuilding(); } },
{ "IFCBUILDINGELEMENT", []( void )->BuildingEntity* { return new IfcBuildingElement(); } },
{ "IFCBUILDINGELEMENTPART", []( void )->BuildingEntity* { return new IfcBuildingElementPart(); } },
{ "IFCBUILDINGELEMENTPARTTYPE", []( void )->BuildingEntity* { return new IfcBuildingElementPartType(); } },
{ "IFCBUILDINGELEMENTPROXY", []( void )->BuildingEntity* { return new IfcBuildingElementProxy(); } },
{ "IFCBUILDINGELEMENTPROXYTYPE", []( void )->BuildingEntity* { return new IfcBuildingElementProxyType(); } },
{ "IFCBUILDINGELEMENTTYPE", []( void )->BuildingEntity* { return new IfcBuildingElementType(); } },
{ "IFCBUILDINGSTOREY", []( void )->BuildingEntity* { return new IfcBuildingStorey(); } },
{ "IFCBUILDINGSYSTEM", []( void )->BuildingEntity* { return new IfcBuildingSystem(); } },
{ "IFCBURNER", []( void )->BuildingEntity* { return new IfcBurner(); } },
{ "IFCBURNERTYPE", []( void )->BuildingEntity* { return new IfcBurnerType(); } },
{ "IFCCSHAPEPROFILEDEF", []( void )->BuildingEntity* { return new IfcCShapeProfileDef(); } },
{ "IFCCABLECARRIERFITTING", []( void )->BuildingEntity* { return new IfcCableCarrierFitting(); } },
{ "IFCCABLECARRIERFITTINGTYPE", []( void )->BuildingEntity* { return new IfcCableCarrierFittingType(); } },
{ "IFCCABLECARRIERSEGMENT", []( void )->BuildingEntity* { return new IfcCableCarrierSegment(); } },
{ "IFCCABLECARRIERSEGMENTTYPE", []( void )->BuildingEntity* { return new IfcCableCarrierSegmentType(); } },
{ "IFCCABLEFITTING", []( void )->BuildingEntity* { return new IfcCableFitting(); } },
{ "IFCCABLEFITTINGTYPE", []( void )->BuildingEntity* { return new IfcCableFittingType(); } },
{ "IFCCABLESEGMENT", []( void )->BuildingEntity* { return new IfcCableSegment(); } },
{ "IFCCABLESEGMENTTYPE", []( void )->BuildingEntity* { return new IfcCableSegmentType(); } },
{ "IFCCARTESIANPOINT", []( void )->BuildingEntity* { return new IfcCartesianPoint(); } },
{ "IFCCARTESIANPOINTLIST", []( void )->BuildingEntity* { return new IfcCartesianPointList(); } },
{ "IFCCARTESIANPOINTLIST2D", []( void )->BuildingEntity* { return new IfcCartesianPointList2D(); } },
{ "IFCCARTESIANPOINTLIST3D", []( void )->BuildingEntity* { return new IfcCartesianPointList3D(); } },
{ "IFCCARTESIANTRANSFORMATIONOPERATOR", []( void )->BuildingEntity* { return new IfcCartesianTransformationOperator(); } },
{ "IFCCARTESIANTRANSFORMATIONOPERATOR2D", []( void )->BuildingEntity* { return new IfcCartesianTransformationOperator2D(); } },
{ "IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM", []( void )->BuildingEntity* { return new IfcCartesianTransformationOperator2DnonUniform(); } },
{ "IFCCARTESIANTRANSFORMATIONOPERATOR3D", []( void )->BuildingEntity* { return new IfcCartesianTransformationOperator3D(); } },
{ "IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM", []( void )->BuildingEntity* { return new IfcCartesianTransformationOperator3DnonUniform(); } },
{ "IFCCENTERLINEPROFILEDEF", []( void )->BuildingEntity* { return new IfcCenterLineProfileDef(); } },
{ "IFCCHILLER", []( void )->BuildingEntity* { return new IfcChiller(); } },
{ "IFCCHILLERTYPE", []( void )->BuildingEntity* { return new IfcChillerType(); } },
{ "IFCCHIMNEY", []( void )->BuildingEntity* { return new IfcChimney(); } },
{ "IFCCHIMNEYTYPE", []( void )->BuildingEntity* { return new IfcChimneyType(); } },
{ "IFCCIRCLE", []( void )->BuildingEntity* { return new IfcCircle(); } },
{ "IFCCIRCLEHOLLOWPROFILEDEF", []( void )->BuildingEntity* { return new IfcCircleHollowProfileDef(); } },
{ "IFCCIRCLEPROFILEDEF", []( void )->BuildingEntity* { return new IfcCircleProfileDef(); } },
{ "IFCCIVILELEMENT", []( void )->BuildingEntity* { return new IfcCivilElement(); } },
{ "IFCCIVILELEMENTTYPE", []( void )->BuildingEntity* { return new IfcCivilElementType(); } },
{ "IFCCLASSIFICATION", []( void )->BuildingEntity* { return new IfcClassification(); } },
{ "IFCCLASSIFICATIONREFERENCE", []( void )->BuildingEntity* { return new IfcClassificationReference(); } },
{ "IFCCLOSEDSHELL", []( void )->BuildingEntity* { return new IfcClosedShell(); } },
{ "IFCCOIL", []( void )->BuildingEntity* { return new IfcCoil(); } },
{ "IFCCOILTYPE", []( void )->BuildingEntity* { return new IfcCoilType(); } },
{ "IFCCOLOURRGB", []( void )->BuildingEntity* { return new IfcColourRgb(); } },
{ "IFCCOLOURRGBLIST", []( void )->BuildingEntity* { return new IfcColourRgbList(); } },
{ "IFCCOLOURSPECIFICATION", []( void )->BuildingEntity* { return new IfcColourSpecification(); } },
{ "IFCCOLUMN", []( void )->BuildingEntity* { return new IfcColumn(); } },
{ "IFCCOLUMNSTANDARDCASE", []( void )->BuildingEntity* { return new IfcColumnStandardCase(); } },
{ "IFCCOLUMNTYPE", []( void )->BuildingEntity* { return new IfcColumnType(); } },
{ "IFCCOMMUNICATIONSAPPLIANCE", []( void )->BuildingEntity* { return new IfcCommunicationsAppliance(); } },
{ "IFCCOMMUNICATIONSAPPLIANCETYPE", []( void )->BuildingEntity* { return new IfcCommunicationsApplianceType(); } },
{ "IFCCOMPLEXPROPERTY", []( void )->BuildingEntity* { return new IfcComplexProperty(); } },
{ "IFCCOMPLEXPROPERTYTEMPLATE", []( void )->BuildingEntity* { return new IfcComplexPropertyTemplate(); } },
{ "IFCCOMPOSITECURVE", []( void )->BuildingEntity* { return new IfcCompositeCurve(); } },
{ "IFCCOMPOSITECURVEONSURFACE", []( void )->BuildingEntity* { return new IfcCompositeCurveOnSurface(); } },
{ "IFCCOMPOSITECURVESEGMENT", []( void )->BuildingEntity* { return new IfcCompositeCurveSegment(); } },
{ "IFCCOMPOSITEPROFILEDEF", []( void )->BuildingEntity* { return new IfcCompositeProfileDef(); } },
{ "IFCCOMPRESSOR", []( void )->BuildingEntity* { return new IfcCompressor(); } },
{ "IFCCOMPRESSORTYPE", []( void )->BuildingEntity* { return new IfcCompressorType(); } },
{ "IFCCONDENSER", []( void )->BuildingEntity* { return new IfcCondenser(); } },
{ "IFCCONDENSERTYPE", []( void )->BuildingEntity* { return new IfcCondenserType(); } },
{ "IFCCONIC", []( void )->BuildingEntity* { return new IfcConic(); } },
{ "IFCCONNECTEDFACESET", []( void )->BuildingEntity* { return new IfcConnectedFaceSet(); } },
{ "IFCCONNECTIONCURVEGEOMETRY", []( void )->BuildingEntity* { return new IfcConnectionCurveGeometry(); } },
{ "IFCCONNECTIONGEOMETRY", []( void )->BuildingEntity* { return new IfcConnectionGeometry(); } },
{ "IFCCONNECTIONPOINTECCENTRICITY", []( void )->BuildingEntity* { return new IfcConnectionPointEccentricity(); } },
{ "IFCCONNECTIONPOINTGEOMETRY", []( void )->BuildingEntity* { return new IfcConnectionPointGeometry(); } },
{ "IFCCONNECTIONSURFACEGEOMETRY", []( void )->BuildingEntity* { return new IfcConnectionSurfaceGeometry(); } },
{ "IFCCONNECTIONVOLUMEGEOMETRY", []( void )->BuildingEntity* { return new IfcConnectionVolumeGeometry(); } },
{ "IFCCONSTRAINT", []( void )->BuildingEntity* { return new IfcConstraint(); } },
{ "IFCCONSTRUCTIONEQUIPMENTRESOURCE", []( void )->BuildingEntity* { return new IfcConstructionEquipmentResource(); } },
{ "IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE", []( void )->BuildingEntity* { return new IfcConstructionEquipmentResourceType(); } },
{ "IFCCONSTRUCTIONMATERIALRESOURCE", []( void )->BuildingEntity* { return new IfcConstructionMaterialResource(); } },
{ "IFCCONSTRUCTIONMATERIALRESOURCETYPE", []( void )->BuildingEntity* { return new IfcConstructionMaterialResourceType(); } },
{ "IFCCONSTRUCTIONPRODUCTRESOURCE", []( void )->BuildingEntity* { return new IfcConstructionProductResource(); } },
{ "IFCCONSTRUCTIONPRODUCTRESOURCETYPE", []( void )->BuildingEntity* { return new IfcConstructionProductResourceType(); } },
{ "IFCCONSTRUCTIONRESOURCE", []( void )->BuildingEntity* { return new IfcConstructionResource(); } },
{ "IFCCONSTRUCTIONRESOURCETYPE", []( void )->BuildingEntity* { return new IfcConstructionResourceType(); } },
{ "IFCCONTEXT", []( void )->BuildingEntity* { return new IfcContext(); } },
{ "IFCCONTEXTDEPENDENTUNIT", []( void )->BuildingEntity* { return new IfcContextDependentUnit(); } },
{ "IFCCONTROL", []( void )->BuildingEntity* { return new IfcControl(); } },
{ "IFCCONTROLLER", []( void )->BuildingEntity* { return new IfcController(); } },
{ "IFCCONTROLLERTYPE", []( void )->BuildingEntity* { return new IfcControllerType(); } },
{ "IFCCONVERSIONBASEDUNIT", []( void )->BuildingEntity* { return new IfcConversionBasedUnit(); } },
{ "IFCCONVERSIONBASEDUNITWITHOFFSET", []( void )->BuildingEntity* { return new IfcConversionBasedUnitWithOffset(); } },
{ "IFCCOOLEDBEAM", []( void )->BuildingEntity* { return new IfcCooledBeam(); } },
{ "IFCCOOLEDBEAMTYPE", []( void )->BuildingEntity* { return new IfcCooledBeamType(); } },
{ "IFCCOOLINGTOWER", []( void )->BuildingEntity* { return new IfcCoolingTower(); } },
{ "IFCCOOLINGTOWERTYPE", []( void )->BuildingEntity* { return new IfcCoolingTowerType(); } },
{ "IFCCOORDINATEOPERATION", []( void )->BuildingEntity* { return new IfcCoordinateOperation(); } },
{ "IFCCOORDINATEREFERENCESYSTEM", []( void )->BuildingEntity* { return new IfcCoordinateReferenceSystem(); } },
{ "IFCCOSTITEM", []( void )->BuildingEntity* { return new IfcCostItem(); } },
{ "IFCCOSTSCHEDULE", []( void )->BuildingEntity* { return new IfcCostSchedule(); } },
{ "IFCCOSTVALUE", []( void )->BuildingEntity* { return new IfcCostValue(); } },
{ "IFCCOVERING", []( void )->BuildingEntity* { return new IfcCovering(); } },
{ "IFCCOVERINGTYPE", []( void )->BuildingEntity* { return new IfcCoveringType(); } },
{ "IFCCREWRESOURCE", []( void )->BuildingEntity* { return new IfcCrewResource(); } },
{ "IFCCREWRESOURCETYPE", []( void )->BuildingEntity* { return new IfcCrewResourceType(); } },
{ "IFCCSGPRIMITIVE3D", []( void )->BuildingEntity* { return new IfcCsgPrimitive3D(); } },
{ "IFCCSGSOLID", []( void )->BuildingEntity* { return new IfcCsgSolid(); } },
{ "IFCCURRENCYRELATIONSHIP", []( void )->BuildingEntity* { return new IfcCurrencyRelationship(); } },
{ "IFCCURTAINWALL", []( void )->BuildingEntity* { return new IfcCurtainWall(); } },
{ "IFCCURTAINWALLTYPE", []( void )->BuildingEntity* { return new IfcCurtainWallType(); } },
{ "IFCCURVE", []( void )->BuildingEntity* { return new IfcCurve(); } },
{ "IFCCURVEBOUNDEDPLANE", []( void )->BuildingEntity* { return new IfcCurveBoundedPlane(); } },
{ "IFCCURVEBOUNDEDSURFACE", []( void )->BuildingEntity* { return new IfcCurveBoundedSurface(); } },
{ "IFCCURVESTYLE", []( void )->BuildingEntity* { return new IfcCurveStyle(); } },
{ "IFCCURVESTYLEFONT", []( void )->BuildingEntity* { return new IfcCurveStyleFont(); } },
{ "IFCCURVESTYLEFONTANDSCALING", []( void )->BuildingEntity* { return new IfcCurveStyleFontAndScaling(); } },
{ "IFCCURVESTYLEFONTPATTERN", []( void )->BuildingEntity* { return new IfcCurveStyleFontPattern(); } },
{ "IFCCYLINDRICALSURFACE", []( void )->BuildingEntity* { return new IfcCylindricalSurface(); } },
{ "IFCDAMPER", []( void )->BuildingEntity* { return new IfcDamper(); } },
{ "IFCDAMPERTYPE", []( void )->BuildingEntity* { return new IfcDamperType(); } },
{ "IFCDERIVEDPROFILEDEF", []( void )->BuildingEntity* { return new IfcDerivedProfileDef(); } },
{ "IFCDERIVEDUNIT", []( void )->BuildingEntity* { return new IfcDerivedUnit(); } },
{ "IFCDERIVEDUNITELEMENT", []( void )->BuildingEntity* { return new IfcDerivedUnitElement(); } },
{ "IFCDIMENSIONALEXPONENTS", []( void )->BuildingEntity* { return new IfcDimensionalExponents(); } },
{ "IFCDIRECTION", []( void )->BuildingEntity* { return new IfcDirection(); } },
{ "IFCDISCRETEACCESSORY", []( void )->BuildingEntity* { return new IfcDiscreteAccessory(); } },
{ "IFCDISCRETEACCESSORYTYPE", []( void )->BuildingEntity* { return new IfcDiscreteAccessoryType(); } },
{ "IFCDISTRIBUTIONCHAMBERELEMENT", []( void )->BuildingEntity* { return new IfcDistributionChamberElement(); } },
{ "IFCDISTRIBUTIONCHAMBERELEMENTTYPE", []( void )->BuildingEntity* { return new IfcDistributionChamberElementType(); } },
{ "IFCDISTRIBUTIONCIRCUIT", []( void )->BuildingEntity* { return new IfcDistributionCircuit(); } },
{ "IFCDISTRIBUTIONCONTROLELEMENT", []( void )->BuildingEntity* { return new IfcDistributionControlElement(); } },
{ "IFCDISTRIBUTIONCONTROLELEMENTTYPE", []( void )->BuildingEntity* { return new IfcDistributionControlElementType(); } },
{ "IFCDISTRIBUTIONELEMENT", []( void )->BuildingEntity* { return new IfcDistributionElement(); } },
{ "IFCDISTRIBUTIONELEMENTTYPE", []( void )->BuildingEntity* { return new IfcDistributionElementType(); } },
{ "IFCDISTRIBUTIONFLOWELEMENT", []( void )->BuildingEntity* { return new IfcDistributionFlowElement(); } },
{ "IFCDISTRIBUTIONFLOWELEMENTTYPE", []( void )->BuildingEntity* { return new IfcDistributionFlowElementType(); } },
{ "IFCDISTRIBUTIONPORT", []( void )->BuildingEntity* { return new IfcDistributionPort(); } },
{ "IFCDISTRIBUTIONSYSTEM", []( void )->BuildingEntity* { return new IfcDistributionSystem(); } },
{ "IFCDOCUMENTINFORMATION", []( void )->BuildingEntity* { return new IfcDocumentInformation(); } },
{ "IFCDOCUMENTINFORMATIONRELATIONSHIP", []( void )->BuildingEntity* { return new IfcDocumentInformationRelationship(); } },
{ "IFCDOCUMENTREFERENCE", []( void )->BuildingEntity* { return new IfcDocumentReference(); } },
{ "IFCDOOR", []( void )->BuildingEntity* { return new IfcDoor(); } },
{ "IFCDOORLININGPROPERTIES", []( void )->BuildingEntity* { return new IfcDoorLiningProperties(); } },
{ "IFCDOORPANELPROPERTIES", []( void )->BuildingEntity* { return new IfcDoorPanelProperties(); } },
{ "IFCDOORSTANDARDCASE", []( void )->BuildingEntity* { return new IfcDoorStandardCase(); } },
{ "IFCDOORSTYLE", []( void )->BuildingEntity* { return new IfcDoorStyle(); } },
{ "IFCDOORTYPE", []( void )->BuildingEntity* { return new IfcDoorType(); } },
{ "IFCDRAUGHTINGPREDEFINEDCOLOUR", []( void )->BuildingEntity* { return new IfcDraughtingPreDefinedColour(); } },
{ "IFCDRAUGHTINGPREDEFINEDCURVEFONT", []( void )->BuildingEntity* { return new IfcDraughtingPreDefinedCurveFont(); } },
{ "IFCDUCTFITTING", []( void )->BuildingEntity* { return new IfcDuctFitting(); } },
{ "IFCDUCTFITTINGTYPE", []( void )->BuildingEntity* { return new IfcDuctFittingType(); } },
{ "IFCDUCTSEGMENT", []( void )->BuildingEntity* { return new IfcDuctSegment(); } },
{ "IFCDUCTSEGMENTTYPE", []( void )->BuildingEntity* { return new IfcDuctSegmentType(); } },
{ "IFCDUCTSILENCER", []( void )->BuildingEntity* { return new IfcDuctSilencer(); } },
{ "IFCDUCTSILENCERTYPE", []( void )->BuildingEntity* { return new IfcDuctSilencerType(); } },
{ "IFCEDGE", []( void )->BuildingEntity* { return new IfcEdge(); } },
{ "IFCEDGECURVE", []( void )->BuildingEntity* { return new IfcEdgeCurve(); } },
{ "IFCEDGELOOP", []( void )->BuildingEntity* { return new IfcEdgeLoop(); } },
{ "IFCELECTRICAPPLIANCE", []( void )->BuildingEntity* { return new IfcElectricAppliance(); } },
{ "IFCELECTRICAPPLIANCETYPE", []( void )->BuildingEntity* { return new IfcElectricApplianceType(); } },
{ "IFCELECTRICDISTRIBUTIONBOARD", []( void )->BuildingEntity* { return new IfcElectricDistributionBoard(); } },
{ "IFCELECTRICDISTRIBUTIONBOARDTYPE", []( void )->BuildingEntity* { return new IfcElectricDistributionBoardType(); } },
{ "IFCELECTRICFLOWSTORAGEDEVICE", []( void )->BuildingEntity* { return new IfcElectricFlowStorageDevice(); } },
{ "IFCELECTRICFLOWSTORAGEDEVICETYPE", []( void )->BuildingEntity* { return new IfcElectricFlowStorageDeviceType(); } },
{ "IFCELECTRICGENERATOR", []( void )->BuildingEntity* { return new IfcElectricGenerator(); } },
{ "IFCELECTRICGENERATORTYPE", []( void )->BuildingEntity* { return new IfcElectricGeneratorType(); } },
{ "IFCELECTRICMOTOR", []( void )->BuildingEntity* { return new IfcElectricMotor(); } },
{ "IFCELECTRICMOTORTYPE", []( void )->BuildingEntity* { return new IfcElectricMotorType(); } },
{ "IFCELECTRICTIMECONTROL", []( void )->BuildingEntity* { return new IfcElectricTimeControl(); } },
{ "IFCELECTRICTIMECONTROLTYPE", []( void )->BuildingEntity* { return new IfcElectricTimeControlType(); } },
{ "IFCELEMENT", []( void )->BuildingEntity* { return new IfcElement(); } },
{ "IFCELEMENTASSEMBLY", []( void )->BuildingEntity* { return new IfcElementAssembly(); } },
{ "IFCELEMENTASSEMBLYTYPE", []( void )->BuildingEntity* { return new IfcElementAssemblyType(); } },
{ "IFCELEMENTCOMPONENT", []( void )->BuildingEntity* { return new IfcElementComponent(); } },
{ "IFCELEMENTCOMPONENTTYPE", []( void )->BuildingEntity* { return new IfcElementComponentType(); } },
{ "IFCELEMENTQUANTITY", []( void )->BuildingEntity* { return new IfcElementQuantity(); } },
{ "IFCELEMENTTYPE", []( void )->BuildingEntity* { return new IfcElementType(); } },
{ "IFCELEMENTARYSURFACE", []( void )->BuildingEntity* { return new IfcElementarySurface(); } },
{ "IFCELLIPSE", []( void )->BuildingEntity* { return new IfcEllipse(); } },
{ "IFCELLIPSEPROFILEDEF", []( void )->BuildingEntity* { return new IfcEllipseProfileDef(); } },
{ "IFCENERGYCONVERSIONDEVICE", []( void )->BuildingEntity* { return new IfcEnergyConversionDevice(); } },
{ "IFCENERGYCONVERSIONDEVICETYPE", []( void )->BuildingEntity* { return new IfcEnergyConversionDeviceType(); } },
{ "IFCENGINE", []( void )->BuildingEntity* { return new IfcEngine(); } },
{ "IFCENGINETYPE", []( void )->BuildingEntity* { return new IfcEngineType(); } },
{ "IFCEVAPORATIVECOOLER", []( void )->BuildingEntity* { return new IfcEvaporativeCooler(); } },
{ "IFCEVAPORATIVECOOLERTYPE", []( void )->BuildingEntity* { return new IfcEvaporativeCoolerType(); } },
{ "IFCEVAPORATOR", []( void )->BuildingEntity* { return new IfcEvaporator(); } },
{ "IFCEVAPORATORTYPE", []( void )->BuildingEntity* { return new IfcEvaporatorType(); } },
{ "IFCEVENT", []( void )->BuildingEntity* { return new IfcEvent(); } },
{ "IFCEVENTTIME", []( void )->BuildingEntity* { return new IfcEventTime(); } },
{ "IFCEVENTTYPE", []( void )->BuildingEntity* { return new IfcEventType(); } },
{ "IFCEXTENDEDPROPERTIES", []( void )->BuildingEntity* { return new IfcExtendedProperties(); } },
{ "IFCEXTERNALINFORMATION", []( void )->BuildingEntity* { return new IfcExternalInformation(); } },
{ "IFCEXTERNALREFERENCE", []( void )->BuildingEntity* { return new IfcExternalReference(); } },
{ "IFCEXTERNALREFERENCERELATIONSHIP", []( void )->BuildingEntity* { return new IfcExternalReferenceRelationship(); } },
{ "IFCEXTERNALSPATIALELEMENT", []( void )->BuildingEntity* { return new IfcExternalSpatialElement(); } },
{ "IFCEXTERNALSPATIALSTRUCTUREELEMENT", []( void )->BuildingEntity* { return new IfcExternalSpatialStructureElement(); } },
{ "IFCEXTERNALLYDEFINEDHATCHSTYLE", []( void )->BuildingEntity* { return new IfcExternallyDefinedHatchStyle(); } },
{ "IFCEXTERNALLYDEFINEDSURFACESTYLE", []( void )->BuildingEntity* { return new IfcExternallyDefinedSurfaceStyle(); } },
{ "IFCEXTERNALLYDEFINEDTEXTFONT", []( void )->BuildingEntity* { return new IfcExternallyDefinedTextFont(); } },
{ "IFCEXTRUDEDAREASOLID", []( void )->BuildingEntity* { return new IfcExtrudedAreaSolid(); } },
{ "IFCEXTRUDEDAREASOLIDTAPERED", []( void )->BuildingEntity* { return new IfcExtrudedAreaSolidTapered(); } },
{ "IFCFACE", []( void )->BuildingEntity* { return new IfcFace(); } },
{ "IFCFACEBASEDSURFACEMODEL", []( void )->BuildingEntity* { return new IfcFaceBasedSurfaceModel(); } },
{ "IFCFACEBOUND", []( void )->BuildingEntity* { return new IfcFaceBound(); } },
{ "IFCFACEOUTERBOUND", []( void )->BuildingEntity* { return new IfcFaceOuterBound(); } },
{ "IFCFACESURFACE", []( void )->BuildingEntity* { return new IfcFaceSurface(); } },
{ "IFCFACETEDBREP", []( void )->BuildingEntity* { return new IfcFacetedBrep(); } },
{ "IFCFACETEDBREPWITHVOIDS", []( void )->BuildingEntity* { return new IfcFacetedBrepWithVoids(); } },
{ "IFCFAILURECONNECTIONCONDITION", []( void )->BuildingEntity* { return new IfcFailureConnectionCondition(); } },
{ "IFCFAN", []( void )->BuildingEntity* { return new IfcFan(); } },
{ "IFCFANTYPE", []( void )->BuildingEntity* { return new IfcFanType(); } },
{ "IFCFASTENER", []( void )->BuildingEntity* { return new IfcFastener(); } },
{ "IFCFASTENERTYPE", []( void )->BuildingEntity* { return new IfcFastenerType(); } },
{ "IFCFEATUREELEMENT", []( void )->BuildingEntity* { return new IfcFeatureElement(); } },
{ "IFCFEATUREELEMENTADDITION", []( void )->BuildingEntity* { return new IfcFeatureElementAddition(); } },
{ "IFCFEATUREELEMENTSUBTRACTION", []( void )->BuildingEntity* { return new IfcFeatureElementSubtraction(); } },
{ "IFCFILLAREASTYLE", []( void )->BuildingEntity* { return new IfcFillAreaStyle(); } },
{ "IFCFILLAREASTYLEHATCHING", []( void )->BuildingEntity* { return new IfcFillAreaStyleHatching(); } },
{ "IFCFILLAREASTYLETILES", []( void )->BuildingEntity* { return new IfcFillAreaStyleTiles(); } },
{ "IFCFILTER", []( void )->BuildingEntity* { return new IfcFilter(); } },
{ "IFCFILTERTYPE", []( void )->BuildingEntity* { return new IfcFilterType(); } },
{ "IFCFIRESUPPRESSIONTERMINAL", []( void )->BuildingEntity* { return new IfcFireSuppressionTerminal(); } },
{ "IFCFIRESUPPRESSIONTERMINALTYPE", []( void )->BuildingEntity* { return new IfcFireSuppressionTerminalType(); } },
{ "IFCFIXEDREFERENCESWEPTAREASOLID", []( void )->BuildingEntity* { return new IfcFixedReferenceSweptAreaSolid(); } },
{ "IFCFLOWCONTROLLER", []( void )->BuildingEntity* { return new IfcFlowController(); } },
{ "IFCFLOWCONTROLLERTYPE", []( void )->BuildingEntity* { return new IfcFlowControllerType(); } },
{ "IFCFLOWFITTING", []( void )->BuildingEntity* { return new IfcFlowFitting(); } },
{ "IFCFLOWFITTINGTYPE", []( void )->BuildingEntity* { return new IfcFlowFittingType(); } },
{ "IFCFLOWINSTRUMENT", []( void )->BuildingEntity* { return new IfcFlowInstrument(); } },
{ "IFCFLOWINSTRUMENTTYPE", []( void )->BuildingEntity* { return new IfcFlowInstrumentType(); } },
{ "IFCFLOWMETER", []( void )->BuildingEntity* { return new IfcFlowMeter(); } },
{ "IFCFLOWMETERTYPE", []( void )->BuildingEntity* { return new IfcFlowMeterType(); } },
{ "IFCFLOWMOVINGDEVICE", []( void )->BuildingEntity* { return new IfcFlowMovingDevice(); } },
{ "IFCFLOWMOVINGDEVICETYPE", []( void )->BuildingEntity* { return new IfcFlowMovingDeviceType(); } },
{ "IFCFLOWSEGMENT", []( void )->BuildingEntity* { return new IfcFlowSegment(); } },
{ "IFCFLOWSEGMENTTYPE", []( void )->BuildingEntity* { return new IfcFlowSegmentType(); } },
{ "IFCFLOWSTORAGEDEVICE", []( void )->BuildingEntity* { return new IfcFlowStorageDevice(); } },
{ "IFCFLOWSTORAGEDEVICETYPE", []( void )->BuildingEntity* { return new IfcFlowStorageDeviceType(); } },
{ "IFCFLOWTERMINAL", []( void )->BuildingEntity* { return new IfcFlowTerminal(); } },
{ "IFCFLOWTERMINALTYPE", []( void )->BuildingEntity* { return new IfcFlowTerminalType(); } },
{ "IFCFLOWTREATMENTDEVICE", []( void )->BuildingEntity* { return new IfcFlowTreatmentDevice(); } },
{ "IFCFLOWTREATMENTDEVICETYPE", []( void )->BuildingEntity* { return new IfcFlowTreatmentDeviceType(); } },
{ "IFCFOOTING", []( void )->BuildingEntity* { return new IfcFooting(); } },
{ "IFCFOOTINGTYPE", []( void )->BuildingEntity* { return new IfcFootingType(); } },
{ "IFCFURNISHINGELEMENT", []( void )->BuildingEntity* { return new IfcFurnishingElement(); } },
{ "IFCFURNISHINGELEMENTTYPE", []( void )->BuildingEntity* { return new IfcFurnishingElementType(); } },
{ "IFCFURNITURE", []( void )->BuildingEntity* { return new IfcFurniture(); } },
{ "IFCFURNITURETYPE", []( void )->BuildingEntity* { return new IfcFurnitureType(); } },
{ "IFCGEOGRAPHICELEMENT", []( void )->BuildingEntity* { return new IfcGeographicElement(); } },
{ "IFCGEOGRAPHICELEMENTTYPE", []( void )->BuildingEntity* { return new IfcGeographicElementType(); } },
{ "IFCGEOMETRICCURVESET", []( void )->BuildingEntity* { return new IfcGeometricCurveSet(); } },
{ "IFCGEOMETRICREPRESENTATIONCONTEXT", []( void )->BuildingEntity* { return new IfcGeometricRepresentationContext(); } },
{ "IFCGEOMETRICREPRESENTATIONITEM", []( void )->BuildingEntity* { return new IfcGeometricRepresentationItem(); } },
{ "IFCGEOMETRICREPRESENTATIONSUBCONTEXT", []( void )->BuildingEntity* { return new IfcGeometricRepresentationSubContext(); } },
{ "IFCGEOMETRICSET", []( void )->BuildingEntity* { return new IfcGeometricSet(); } },
{ "IFCGRID", []( void )->BuildingEntity* { return new IfcGrid(); } },
{ "IFCGRIDAXIS", []( void )->BuildingEntity* { return new IfcGridAxis(); } },
{ "IFCGRIDPLACEMENT", []( void )->BuildingEntity* { return new IfcGridPlacement(); } },
{ "IFCGROUP", []( void )->BuildingEntity* { return new IfcGroup(); } },
{ "IFCHALFSPACESOLID", []( void )->BuildingEntity* { return new IfcHalfSpaceSolid(); } },
{ "IFCHEATEXCHANGER", []( void )->BuildingEntity* { return new IfcHeatExchanger(); } },
{ "IFCHEATEXCHANGERTYPE", []( void )->BuildingEntity* { return new IfcHeatExchangerType(); } },
{ "IFCHUMIDIFIER", []( void )->BuildingEntity* { return new IfcHumidifier(); } },
{ "IFCHUMIDIFIERTYPE", []( void )->BuildingEntity* { return new IfcHumidifierType(); } },
{ "IFCISHAPEPROFILEDEF", []( void )->BuildingEntity* { return new IfcIShapeProfileDef(); } },
{ "IFCIMAGETEXTURE", []( void )->BuildingEntity* { return new IfcImageTexture(); } },
{ "IFCINDEXEDCOLOURMAP", []( void )->BuildingEntity* { return new IfcIndexedColourMap(); } },
{ "IFCINDEXEDPOLYCURVE", []( void )->BuildingEntity* { return new IfcIndexedPolyCurve(); } },
{ "IFCINDEXEDPOLYGONALFACE", []( void )->BuildingEntity* { return new IfcIndexedPolygonalFace(); } },
{ "IFCINDEXEDPOLYGONALFACEWITHVOIDS", []( void )->BuildingEntity* { return new IfcIndexedPolygonalFaceWithVoids(); } },
{ "IFCINDEXEDTEXTUREMAP", []( void )->BuildingEntity* { return new IfcIndexedTextureMap(); } },
{ "IFCINDEXEDTRIANGLETEXTUREMAP", []( void )->BuildingEntity* { return new IfcIndexedTriangleTextureMap(); } },
{ "IFCINTERCEPTOR", []( void )->BuildingEntity* { return new IfcInterceptor(); } },
{ "IFCINTERCEPTORTYPE", []( void )->BuildingEntity* { return new IfcInterceptorType(); } },
{ "IFCINTERSECTIONCURVE", []( void )->BuildingEntity* { return new IfcIntersectionCurve(); } },
{ "IFCINVENTORY", []( void )->BuildingEntity* { return new IfcInventory(); } },
{ "IFCIRREGULARTIMESERIES", []( void )->BuildingEntity* { return new IfcIrregularTimeSeries(); } },
{ "IFCIRREGULARTIMESERIESVALUE", []( void )->BuildingEntity* { return new IfcIrregularTimeSeriesValue(); } },
{ "IFCJUNCTIONBOX", []( void )->BuildingEntity* { return new IfcJunctionBox(); } },
{ "IFCJUNCTIONBOXTYPE", []( void )->BuildingEntity* { return new IfcJunctionBoxType(); } },
{ "IFCLSHAPEPROFILEDEF", []( void )->BuildingEntity* { return new IfcLShapeProfileDef(); } },
{ "IFCLABORRESOURCE", []( void )->BuildingEntity* { return new IfcLaborResource(); } },
{ "IFCLABORRESOURCETYPE", []( void )->BuildingEntity* { return new IfcLaborResourceType(); } },
{ "IFCLAGTIME", []( void )->BuildingEntity* { return new IfcLagTime(); } },
{ "IFCLAMP", []( void )->BuildingEntity* { return new IfcLamp(); } },
{ "IFCLAMPTYPE", []( void )->BuildingEntity* { return new IfcLampType(); } },
{ "IFCLIBRARYINFORMATION", []( void )->BuildingEntity* { return new IfcLibraryInformation(); } },
{ "IFCLIBRARYREFERENCE", []( void )->BuildingEntity* { return new IfcLibraryReference(); } },
{ "IFCLIGHTDISTRIBUTIONDATA", []( void )->BuildingEntity* { return new IfcLightDistributionData(); } },
{ "IFCLIGHTFIXTURE", []( void )->BuildingEntity* { return new IfcLightFixture(); } },
{ "IFCLIGHTFIXTURETYPE", []( void )->BuildingEntity* { return new IfcLightFixtureType(); } },
{ "IFCLIGHTINTENSITYDISTRIBUTION", []( void )->BuildingEntity* { return new IfcLightIntensityDistribution(); } },
{ "IFCLIGHTSOURCE", []( void )->BuildingEntity* { return new IfcLightSource(); } },
{ "IFCLIGHTSOURCEAMBIENT", []( void )->BuildingEntity* { return new IfcLightSourceAmbient(); } },
{ "IFCLIGHTSOURCEDIRECTIONAL", []( void )->BuildingEntity* { return new IfcLightSourceDirectional(); } },
{ "IFCLIGHTSOURCEGONIOMETRIC", []( void )->BuildingEntity* { return new IfcLightSourceGoniometric(); } },
{ "IFCLIGHTSOURCEPOSITIONAL", []( void )->BuildingEntity* { return new IfcLightSourcePositional(); } },
{ "IFCLIGHTSOURCESPOT", []( void )->BuildingEntity* { return new IfcLightSourceSpot(); } },
{ "IFCLINE", []( void )->BuildingEntity* { return new IfcLine(); } },
{ "IFCLOCALPLACEMENT", []( void )->BuildingEntity* { return new IfcLocalPlacement(); } },
{ "IFCLOOP", []( void )->BuildingEntity* { return new IfcLoop(); } },
{ "IFCMANIFOLDSOLIDBREP", []( void )->BuildingEntity* { return new IfcManifoldSolidBrep(); } },
{ "IFCMAPCONVERSION", []( void )->BuildingEntity* { return new IfcMapConversion(); } },
{ "IFCMAPPEDITEM", []( void )->BuildingEntity* { return new IfcMappedItem(); } },
{ "IFCMATERIAL", []( void )->BuildingEntity* { return new IfcMaterial(); } },
{ "IFCMATERIALCLASSIFICATIONRELATIONSHIP", []( void )->BuildingEntity* { return new IfcMaterialClassificationRelationship(); } },
{ "IFCMATERIALCONSTITUENT", []( void )->BuildingEntity* { return new IfcMaterialConstituent(); } },
{ "IFCMATERIALCONSTITUENTSET", []( void )->BuildingEntity* { return new IfcMaterialConstituentSet(); } },
{ "IFCMATERIALDEFINITION", []( void )->BuildingEntity* { return new IfcMaterialDefinition(); } },
{ "IFCMATERIALDEFINITIONREPRESENTATION", []( void )->BuildingEntity* { return new IfcMaterialDefinitionRepresentation(); } },
{ "IFCMATERIALLAYER", []( void )->BuildingEntity* { return new IfcMaterialLayer(); } },
{ "IFCMATERIALLAYERSET", []( void )->BuildingEntity* { return new IfcMaterialLayerSet(); } },
{ "IFCMATERIALLAYERSETUSAGE", []( void )->BuildingEntity* { return new IfcMaterialLayerSetUsage(); } },
{ "IFCMATERIALLAYERWITHOFFSETS", []( void )->BuildingEntity* { return new IfcMaterialLayerWithOffsets(); } },
{ "IFCMATERIALLIST", []( void )->BuildingEntity* { return new IfcMaterialList(); } },
{ "IFCMATERIALPROFILE", []( void )->BuildingEntity* { return new IfcMaterialProfile(); } },
{ "IFCMATERIALPROFILESET", []( void )->BuildingEntity* { return new IfcMaterialProfileSet(); } },
{ "IFCMATERIALPROFILESETUSAGE", []( void )->BuildingEntity* { return new IfcMaterialProfileSetUsage(); } },
{ "IFCMATERIALPROFILESETUSAGETAPERING", []( void )->BuildingEntity* { return new IfcMaterialProfileSetUsageTapering(); } },
{ "IFCMATERIALPROFILEWITHOFFSETS", []( void )->BuildingEntity* { return new IfcMaterialProfileWithOffsets(); } },
{ "IFCMATERIALPROPERTIES", []( void )->BuildingEntity* { return new IfcMaterialProperties(); } },
{ "IFCMATERIALRELATIONSHIP", []( void )->BuildingEntity* { return new IfcMaterialRelationship(); } },
{ "IFCMATERIALUSAGEDEFINITION", []( void )->BuildingEntity* { return new IfcMaterialUsageDefinition(); } },
{ "IFCMEASUREWITHUNIT", []( void )->BuildingEntity* { return new IfcMeasureWithUnit(); } },
{ "IFCMECHANICALFASTENER", []( void )->BuildingEntity* { return new IfcMechanicalFastener(); } },
{ "IFCMECHANICALFASTENERTYPE", []( void )->BuildingEntity* { return new IfcMechanicalFastenerType(); } },
{ "IFCMEDICALDEVICE", []( void )->BuildingEntity* { return new IfcMedicalDevice(); } },
{ "IFCMEDICALDEVICETYPE", []( void )->BuildingEntity* { return new IfcMedicalDeviceType(); } },
{ "IFCMEMBER", []( void )->BuildingEntity* { return new IfcMember(); } },
{ "IFCMEMBERSTANDARDCASE", []( void )->BuildingEntity* { return new IfcMemberStandardCase(); } },
{ "IFCMEMBERTYPE", []( void )->BuildingEntity* { return new IfcMemberType(); } },
{ "IFCMETRIC", []( void )->BuildingEntity* { return new IfcMetric(); } },
{ "IFCMIRROREDPROFILEDEF", []( void )->BuildingEntity* { return new IfcMirroredProfileDef(); } },
{ "IFCMONETARYUNIT", []( void )->BuildingEntity* { return new IfcMonetaryUnit(); } },
{ "IFCMOTORCONNECTION", []( void )->BuildingEntity* { return new IfcMotorConnection(); } },
{ "IFCMOTORCONNECTIONTYPE", []( void )->BuildingEntity* { return new IfcMotorConnectionType(); } },
{ "IFCNAMEDUNIT", []( void )->BuildingEntity* { return new IfcNamedUnit(); } },
{ "IFCOBJECT", []( void )->BuildingEntity* { return new IfcObject(); } },
{ "IFCOBJECTDEFINITION", []( void )->BuildingEntity* { return new IfcObjectDefinition(); } },
{ "IFCOBJECTPLACEMENT", []( void )->BuildingEntity* { return new IfcObjectPlacement(); } },
{ "IFCOBJECTIVE", []( void )->BuildingEntity* { return new IfcObjective(); } },
{ "IFCOCCUPANT", []( void )->BuildingEntity* { return new IfcOccupant(); } },
{ "IFCOFFSETCURVE2D", []( void )->BuildingEntity* { return new IfcOffsetCurve2D(); } },
{ "IFCOFFSETCURVE3D", []( void )->BuildingEntity* { return new IfcOffsetCurve3D(); } },
{ "IFCOPENSHELL", []( void )->BuildingEntity* { return new IfcOpenShell(); } },
{ "IFCOPENINGELEMENT", []( void )->BuildingEntity* { return new IfcOpeningElement(); } },
{ "IFCOPENINGSTANDARDCASE", []( void )->BuildingEntity* { return new IfcOpeningStandardCase(); } },
{ "IFCORGANIZATION", []( void )->BuildingEntity* { return new IfcOrganization(); } },
{ "IFCORGANIZATIONRELATIONSHIP", []( void )->BuildingEntity* { return new IfcOrganizationRelationship(); } },
{ "IFCORIENTEDEDGE", []( void )->BuildingEntity* { return new IfcOrientedEdge(); } },
{ "IFCOUTERBOUNDARYCURVE", []( void )->BuildingEntity* { return new IfcOuterBoundaryCurve(); } },
{ "IFCOUTLET", []( void )->BuildingEntity* { return new IfcOutlet(); } },
{ "IFCOUTLETTYPE", []( void )->BuildingEntity* { return new IfcOutletType(); } },
{ "IFCOWNERHISTORY", []( void )->BuildingEntity* { return new IfcOwnerHistory(); } },
{ "IFCPARAMETERIZEDPROFILEDEF", []( void )->BuildingEntity* { return new IfcParameterizedProfileDef(); } },
{ "IFCPATH", []( void )->BuildingEntity* { return new IfcPath(); } },
{ "IFCPCURVE", []( void )->BuildingEntity* { return new IfcPcurve(); } },
{ "IFCPERFORMANCEHISTORY", []( void )->BuildingEntity* { return new IfcPerformanceHistory(); } },
{ "IFCPERMEABLECOVERINGPROPERTIES", []( void )->BuildingEntity* { return new IfcPermeableCoveringProperties(); } },
{ "IFCPERMIT", []( void )->BuildingEntity* { return new IfcPermit(); } },
{ "IFCPERSON", []( void )->BuildingEntity* { return new IfcPerson(); } },
{ "IFCPERSONANDORGANIZATION", []( void )->BuildingEntity* { return new IfcPersonAndOrganization(); } },
{ "IFCPHYSICALCOMPLEXQUANTITY", []( void )->BuildingEntity* { return new IfcPhysicalComplexQuantity(); } },
{ "IFCPHYSICALQUANTITY", []( void )->BuildingEntity* { return new IfcPhysicalQuantity(); } },
{ "IFCPHYSICALSIMPLEQUANTITY", []( void )->BuildingEntity* { return new IfcPhysicalSimpleQuantity(); } },
{ "IFCPILE", []( void )->BuildingEntity* { return new IfcPile(); } },
{ "IFCPILETYPE", []( void )->BuildingEntity* { return new IfcPileType(); } },
{ "IFCPIPEFITTING", []( void )->BuildingEntity* { return new IfcPipeFitting(); } },
{ "IFCPIPEFITTINGTYPE", []( void )->BuildingEntity* { return new IfcPipeFittingType(); } },
{ "IFCPIPESEGMENT", []( void )->BuildingEntity* { return new IfcPipeSegment(); } },
{ "IFCPIPESEGMENTTYPE", []( void )->BuildingEntity* { return new IfcPipeSegmentType(); } },
{ "IFCPIXELTEXTURE", []( void )->BuildingEntity* { return new IfcPixelTexture(); } },
{ "IFCPLACEMENT", []( void )->BuildingEntity* { return new IfcPlacement(); } },
{ "IFCPLANARBOX", []( void )->BuildingEntity* { return new IfcPlanarBox(); } },
{ "IFCPLANAREXTENT", []( void )->BuildingEntity* { return new IfcPlanarExtent(); } },
{ "IFCPLANE", []( void )->BuildingEntity* { return new IfcPlane(); } },
{ "IFCPLATE", []( void )->BuildingEntity* { return new IfcPlate(); } },
{ "IFCPLATESTANDARDCASE", []( void )->BuildingEntity* { return new IfcPlateStandardCase(); } },
{ "IFCPLATETYPE", []( void )->BuildingEntity* { return new IfcPlateType(); } },
{ "IFCPOINT", []( void )->BuildingEntity* { return new IfcPoint(); } },
{ "IFCPOINTONCURVE", []( void )->BuildingEntity* { return new IfcPointOnCurve(); } },
{ "IFCPOINTONSURFACE", []( void )->BuildingEntity* { return new IfcPointOnSurface(); } },
{ "IFCPOLYLOOP", []( void )->BuildingEntity* { return new IfcPolyLoop(); } },
{ "IFCPOLYGONALBOUNDEDHALFSPACE", []( void )->BuildingEntity* { return new IfcPolygonalBoundedHalfSpace(); } },
{ "IFCPOLYGONALFACESET", []( void )->BuildingEntity* { return new IfcPolygonalFaceSet(); } },
{ "IFCPOLYLINE", []( void )->BuildingEntity* { return new IfcPolyline(); } },
{ "IFCPORT", []( void )->BuildingEntity* { return new IfcPort(); } },
{ "IFCPOSTALADDRESS", []( void )->BuildingEntity* { return new IfcPostalAddress(); } },
{ "IFCPREDEFINEDCOLOUR", []( void )->BuildingEntity* { return new IfcPreDefinedColour(); } },
{ "IFCPREDEFINEDCURVEFONT", []( void )->BuildingEntity* { return new IfcPreDefinedCurveFont(); } },
{ "IFCPREDEFINEDITEM", []( void )->BuildingEntity* { return new IfcPreDefinedItem(); } },
{ "IFCPREDEFINEDPROPERTIES", []( void )->BuildingEntity* { return new IfcPreDefinedProperties(); } },
{ "IFCPREDEFINEDPROPERTYSET", []( void )->BuildingEntity* { return new IfcPreDefinedPropertySet(); } },
{ "IFCPREDEFINEDTEXTFONT", []( void )->BuildingEntity* { return new IfcPreDefinedTextFont(); } },
{ "IFCPRESENTATIONITEM", []( void )->BuildingEntity* { return new IfcPresentationItem(); } },
{ "IFCPRESENTATIONLAYERASSIGNMENT", []( void )->BuildingEntity* { return new IfcPresentationLayerAssignment(); } },
{ "IFCPRESENTATIONLAYERWITHSTYLE", []( void )->BuildingEntity* { return new IfcPresentationLayerWithStyle(); } },
{ "IFCPRESENTATIONSTYLE", []( void )->BuildingEntity* { return new IfcPresentationStyle(); } },
{ "IFCPRESENTATIONSTYLEASSIGNMENT", []( void )->BuildingEntity* { return new IfcPresentationStyleAssignment(); } },
{ "IFCPROCEDURE", []( void )->BuildingEntity* { return new IfcProcedure(); } },
{ "IFCPROCEDURETYPE", []( void )->BuildingEntity* { return new IfcProcedureType(); } },
{ "IFCPROCESS", []( void )->BuildingEntity* { return new IfcProcess(); } },
{ "IFCPRODUCT", []( void )->BuildingEntity* { return new IfcProduct(); } },
{ "IFCPRODUCTDEFINITIONSHAPE", []( void )->BuildingEntity* { return new IfcProductDefinitionShape(); } },
{ "IFCPRODUCTREPRESENTATION", []( void )->BuildingEntity* { return new IfcProductRepresentation(); } },
{ "IFCPROFILEDEF", []( void )->BuildingEntity* { return new IfcProfileDef(); } },
{ "IFCPROFILEPROPERTIES", []( void )->BuildingEntity* { return new IfcProfileProperties(); } },
{ "IFCPROJECT", []( void )->BuildingEntity* { return new IfcProject(); } },
{ "IFCPROJECTLIBRARY", []( void )->BuildingEntity* { return new IfcProjectLibrary(); } },
{ "IFCPROJECTORDER", []( void )->BuildingEntity* { return new IfcProjectOrder(); } },
{ "IFCPROJECTEDCRS", []( void )->BuildingEntity* { return new IfcProjectedCRS(); } },
{ "IFCPROJECTIONELEMENT", []( void )->BuildingEntity* { return new IfcProjectionElement(); } },
{ "IFCPROPERTY", []( void )->BuildingEntity* { return new IfcProperty(); } },
{ "IFCPROPERTYABSTRACTION", []( void )->BuildingEntity* { return new IfcPropertyAbstraction(); } },
{ "IFCPROPERTYBOUNDEDVALUE", []( void )->BuildingEntity* { return new IfcPropertyBoundedValue(); } },
{ "IFCPROPERTYDEFINITION", []( void )->BuildingEntity* { return new IfcPropertyDefinition(); } },
{ "IFCPROPERTYDEPENDENCYRELATIONSHIP", []( void )->BuildingEntity* { return new IfcPropertyDependencyRelationship(); } },
{ "IFCPROPERTYENUMERATEDVALUE", []( void )->BuildingEntity* { return new IfcPropertyEnumeratedValue(); } },
{ "IFCPROPERTYENUMERATION", []( void )->BuildingEntity* { return new IfcPropertyEnumeration(); } },
{ "IFCPROPERTYLISTVALUE", []( void )->BuildingEntity* { return new IfcPropertyListValue(); } },
{ "IFCPROPERTYREFERENCEVALUE", []( void )->BuildingEntity* { return new IfcPropertyReferenceValue(); } },
{ "IFCPROPERTYSET", []( void )->BuildingEntity* { return new IfcPropertySet(); } },
{ "IFCPROPERTYSETDEFINITION", []( void )->BuildingEntity* { return new IfcPropertySetDefinition(); } },
{ "IFCPROPERTYSETTEMPLATE", []( void )->BuildingEntity* { return new IfcPropertySetTemplate(); } },
{ "IFCPROPERTYSINGLEVALUE", []( void )->BuildingEntity* { return new IfcPropertySingleValue(); } },
{ "IFCPROPERTYTABLEVALUE", []( void )->BuildingEntity* { return new IfcPropertyTableValue(); } },
{ "IFCPROPERTYTEMPLATE", []( void )->BuildingEntity* { return new IfcPropertyTemplate(); } },
{ "IFCPROPERTYTEMPLATEDEFINITION", []( void )->BuildingEntity* { return new IfcPropertyTemplateDefinition(); } },
{ "IFCPROTECTIVEDEVICE", []( void )->BuildingEntity* { return new IfcProtectiveDevice(); } },
{ "IFCPROTECTIVEDEVICETRIPPINGUNIT", []( void )->BuildingEntity* { return new IfcProtectiveDeviceTrippingUnit(); } },
{ "IFCPROTECTIVEDEVICETRIPPINGUNITTYPE", []( void )->BuildingEntity* { return new IfcProtectiveDeviceTrippingUnitType(); } },
{ "IFCPROTECTIVEDEVICETYPE", []( void )->BuildingEntity* { return new IfcProtectiveDeviceType(); } },
{ "IFCPROXY", []( void )->BuildingEntity* { return new IfcProxy(); } },
{ "IFCPUMP", []( void )->BuildingEntity* { return new IfcPump(); } },
{ "IFCPUMPTYPE", []( void )->BuildingEntity* { return new IfcPumpType(); } },
{ "IFCQUANTITYAREA", []( void )->BuildingEntity* { return new IfcQuantityArea(); } },
{ "IFCQUANTITYCOUNT", []( void )->BuildingEntity* { return new IfcQuantityCount(); } },
{ "IFCQUANTITYLENGTH", []( void )->BuildingEntity* { return new IfcQuantityLength(); } },
{ "IFCQUANTITYSET", []( void )->BuildingEntity* { return new IfcQuantitySet(); } },
{ "IFCQUANTITYTIME", []( void )->BuildingEntity* { return new IfcQuantityTime(); } },
{ "IFCQUANTITYVOLUME", []( void )->BuildingEntity* { return new IfcQuantityVolume(); } },
{ "IFCQUANTITYWEIGHT", []( void )->BuildingEntity* { return new IfcQuantityWeight(); } },
{ "IFCRAILING", []( void )->BuildingEntity* { return new IfcRailing(); } },
{ "IFCRAILINGTYPE", []( void )->BuildingEntity* { return new IfcRailingType(); } },
{ "IFCRAMP", []( void )->BuildingEntity* { return new IfcRamp(); } },
{ "IFCRAMPFLIGHT", []( void )->BuildingEntity* { return new IfcRampFlight(); } },
{ "IFCRAMPFLIGHTTYPE", []( void )->BuildingEntity* { return new IfcRampFlightType(); } },
{ "IFCRAMPTYPE", []( void )->BuildingEntity* { return new IfcRampType(); } },
{ "IFCRATIONALBSPLINECURVEWITHKNOTS", []( void )->BuildingEntity* { return new IfcRationalBSplineCurveWithKnots(); } },
{ "IFCRATIONALBSPLINESURFACEWITHKNOTS", []( void )->BuildingEntity* { return new IfcRationalBSplineSurfaceWithKnots(); } },
{ "IFCRECTANGLEHOLLOWPROFILEDEF", []( void )->BuildingEntity* { return new IfcRectangleHollowProfileDef(); } },
{ "IFCRECTANGLEPROFILEDEF", []( void )->BuildingEntity* { return new IfcRectangleProfileDef(); } },
{ "IFCRECTANGULARPYRAMID", []( void )->BuildingEntity* { return new IfcRectangularPyramid(); } },
{ "IFCRECTANGULARTRIMMEDSURFACE", []( void )->BuildingEntity* { return new IfcRectangularTrimmedSurface(); } },
{ "IFCRECURRENCEPATTERN", []( void )->BuildingEntity* { return new IfcRecurrencePattern(); } },
{ "IFCREFERENCE", []( void )->BuildingEntity* { return new IfcReference(); } },
{ "IFCREGULARTIMESERIES", []( void )->BuildingEntity* { return new IfcRegularTimeSeries(); } },
{ "IFCREINFORCEMENTBARPROPERTIES", []( void )->BuildingEntity* { return new IfcReinforcementBarProperties(); } },
{ "IFCREINFORCEMENTDEFINITIONPROPERTIES", []( void )->BuildingEntity* { return new IfcReinforcementDefinitionProperties(); } },
{ "IFCREINFORCINGBAR", []( void )->BuildingEntity* { return new IfcReinforcingBar(); } },
{ "IFCREINFORCINGBARTYPE", []( void )->BuildingEntity* { return new IfcReinforcingBarType(); } },
{ "IFCREINFORCINGELEMENT", []( void )->BuildingEntity* { return new IfcReinforcingElement(); } },
{ "IFCREINFORCINGELEMENTTYPE", []( void )->BuildingEntity* { return new IfcReinforcingElementType(); } },
{ "IFCREINFORCINGMESH", []( void )->BuildingEntity* { return new IfcReinforcingMesh(); } },
{ "IFCREINFORCINGMESHTYPE", []( void )->BuildingEntity* { return new IfcReinforcingMeshType(); } },
{ "IFCRELAGGREGATES", []( void )->BuildingEntity* { return new IfcRelAggregates(); } },
{ "IFCRELASSIGNS", []( void )->BuildingEntity* { return new IfcRelAssigns(); } },
{ "IFCRELASSIGNSTOACTOR", []( void )->BuildingEntity* { return new IfcRelAssignsToActor(); } },
{ "IFCRELASSIGNSTOCONTROL", []( void )->BuildingEntity* { return new IfcRelAssignsToControl(); } },
{ "IFCRELASSIGNSTOGROUP", []( void )->BuildingEntity* { return new IfcRelAssignsToGroup(); } },
{ "IFCRELASSIGNSTOGROUPBYFACTOR", []( void )->BuildingEntity* { return new IfcRelAssignsToGroupByFactor(); } },
{ "IFCRELASSIGNSTOPROCESS", []( void )->BuildingEntity* { return new IfcRelAssignsToProcess(); } },
{ "IFCRELASSIGNSTOPRODUCT", []( void )->BuildingEntity* { return new IfcRelAssignsToProduct(); } },
{ "IFCRELASSIGNSTORESOURCE", []( void )->BuildingEntity* { return new IfcRelAssignsToResource(); } },
{ "IFCRELASSOCIATES", []( void )->BuildingEntity* { return new IfcRelAssociates(); } },
{ "IFCRELASSOCIATESAPPROVAL", []( void )->BuildingEntity* { return new IfcRelAssociatesApproval(); } },
{ "IFCRELASSOCIATESCLASSIFICATION", []( void )->BuildingEntity* { return new IfcRelAssociatesClassification(); } },
{ "IFCRELASSOCIATESCONSTRAINT", []( void )->BuildingEntity* { return new IfcRelAssociatesConstraint(); } },
{ "IFCRELASSOCIATESDOCUMENT", []( void )->BuildingEntity* { return new IfcRelAssociatesDocument(); } },
{ "IFCRELASSOCIATESLIBRARY", []( void )->BuildingEntity* { return new IfcRelAssociatesLibrary(); } },
{ "IFCRELASSOCIATESMATERIAL", []( void )->BuildingEntity* { return new IfcRelAssociatesMaterial(); } },
{ "IFCRELCONNECTS", []( void )->BuildingEntity* { return new IfcRelConnects(); } },
{ "IFCRELCONNECTSELEMENTS", []( void )->BuildingEntity* { return new IfcRelConnectsElements(); } },
{ "IFCRELCONNECTSPATHELEMENTS", []( void )->BuildingEntity* { return new IfcRelConnectsPathElements(); } },
{ "IFCRELCONNECTSPORTTOELEMENT", []( void )->BuildingEntity* { return new IfcRelConnectsPortToElement(); } },
{ "IFCRELCONNECTSPORTS", []( void )->BuildingEntity* { return new IfcRelConnectsPorts(); } },
{ "IFCRELCONNECTSSTRUCTURALACTIVITY", []( void )->BuildingEntity* { return new IfcRelConnectsStructuralActivity(); } },
{ "IFCRELCONNECTSSTRUCTURALMEMBER", []( void )->BuildingEntity* { return new IfcRelConnectsStructuralMember(); } },
{ "IFCRELCONNECTSWITHECCENTRICITY", []( void )->BuildingEntity* { return new IfcRelConnectsWithEccentricity(); } },
{ "IFCRELCONNECTSWITHREALIZINGELEMENTS", []( void )->BuildingEntity* { return new IfcRelConnectsWithRealizingElements(); } },
{ "IFCRELCONTAINEDINSPATIALSTRUCTURE", []( void )->BuildingEntity* { return new IfcRelContainedInSpatialStructure(); } },
{ "IFCRELCOVERSBLDGELEMENTS", []( void )->BuildingEntity* { return new IfcRelCoversBldgElements(); } },
{ "IFCRELCOVERSSPACES", []( void )->BuildingEntity* { return new IfcRelCoversSpaces(); } },
{ "IFCRELDECLARES", []( void )->BuildingEntity* { return new IfcRelDeclares(); } },
{ "IFCRELDECOMPOSES", []( void )->BuildingEntity* { return new IfcRelDecomposes(); } },
{ "IFCRELDEFINES", []( void )->BuildingEntity* { return new IfcRelDefines(); } },
{ "IFCRELDEFINESBYOBJECT", []( void )->BuildingEntity* { return new IfcRelDefinesByObject(); } },
{ "IFCRELDEFINESBYPROPERTIES", []( void )->BuildingEntity* { return new IfcRelDefinesByProperties(); } },
{ "IFCRELDEFINESBYTEMPLATE", []( void )->BuildingEntity* { return new IfcRelDefinesByTemplate(); } },
{ "IFCRELDEFINESBYTYPE", []( void )->BuildingEntity* { return new IfcRelDefinesByType(); } },
{ "IFCRELFILLSELEMENT", []( void )->BuildingEntity* { return new IfcRelFillsElement(); } },
{ "IFCRELFLOWCONTROLELEMENTS", []( void )->BuildingEntity* { return new IfcRelFlowControlElements(); } },
{ "IFCRELINTERFERESELEMENTS", []( void )->BuildingEntity* { return new IfcRelInterferesElements(); } },
{ "IFCRELNESTS", []( void )->BuildingEntity* { return new IfcRelNests(); } },
{ "IFCRELPROJECTSELEMENT", []( void )->BuildingEntity* { return new IfcRelProjectsElement(); } },
{ "IFCRELREFERENCEDINSPATIALSTRUCTURE", []( void )->BuildingEntity* { return new IfcRelReferencedInSpatialStructure(); } },
{ "IFCRELSEQUENCE", []( void )->BuildingEntity* { return new IfcRelSequence(); } },
{ "IFCRELSERVICESBUILDINGS", []( void )->BuildingEntity* { return new IfcRelServicesBuildings(); } },
{ "IFCRELSPACEBOUNDARY", []( void )->BuildingEntity* { return new IfcRelSpaceBoundary(); } },
{ "IFCRELSPACEBOUNDARY1STLEVEL", []( void )->BuildingEntity* { return new IfcRelSpaceBoundary1stLevel(); } },
{ "IFCRELSPACEBOUNDARY2NDLEVEL", []( void )->BuildingEntity* { return new IfcRelSpaceBoundary2ndLevel(); } },
{ "IFCRELVOIDSELEMENT", []( void )->BuildingEntity* { return new IfcRelVoidsElement(); } },
{ "IFCRELATIONSHIP", []( void )->BuildingEntity* { return new IfcRelationship(); } },
{ "IFCREPARAMETRISEDCOMPOSITECURVESEGMENT", []( void )->BuildingEntity* { return new IfcReparametrisedCompositeCurveSegment(); } },
{ "IFCREPRESENTATION", []( void )->BuildingEntity* { return new IfcRepresentation(); } },
{ "IFCREPRESENTATIONCONTEXT", []( void )->BuildingEntity* { return new IfcRepresentationContext(); } },
{ "IFCREPRESENTATIONITEM", []( void )->BuildingEntity* { return new IfcRepresentationItem(); } },
{ "IFCREPRESENTATIONMAP", []( void )->BuildingEntity* { return new IfcRepresentationMap(); } },
{ "IFCRESOURCE", []( void )->BuildingEntity* { return new IfcResource(); } },
{ "IFCRESOURCEAPPROVALRELATIONSHIP", []( void )->BuildingEntity* { return new IfcResourceApprovalRelationship(); } },
{ "IFCRESOURCECONSTRAINTRELATIONSHIP", []( void )->BuildingEntity* { return new IfcResourceConstraintRelationship(); } },
{ "IFCRESOURCELEVELRELATIONSHIP", []( void )->BuildingEntity* { return new IfcResourceLevelRelationship(); } },
{ "IFCRESOURCETIME", []( void )->BuildingEntity* { return new IfcResourceTime(); } },
{ "IFCREVOLVEDAREASOLID", []( void )->BuildingEntity* { return new IfcRevolvedAreaSolid(); } },
{ "IFCREVOLVEDAREASOLIDTAPERED", []( void )->BuildingEntity* { return new IfcRevolvedAreaSolidTapered(); } },
{ "IFCRIGHTCIRCULARCONE", []( void )->BuildingEntity* { return new IfcRightCircularCone(); } },
{ "IFCRIGHTCIRCULARCYLINDER", []( void )->BuildingEntity* { return new IfcRightCircularCylinder(); } },
{ "IFCROOF", []( void )->BuildingEntity* { return new IfcRoof(); } },
{ "IFCROOFTYPE", []( void )->BuildingEntity* { return new IfcRoofType(); } },
{ "IFCROOT", []( void )->BuildingEntity* { return new IfcRoot(); } },
{ "IFCROUNDEDRECTANGLEPROFILEDEF", []( void )->BuildingEntity* { return new IfcRoundedRectangleProfileDef(); } },
{ "IFCSIUNIT", []( void )->BuildingEntity* { return new IfcSIUnit(); } },
{ "IFCSANITARYTERMINAL", []( void )->BuildingEntity* { return new IfcSanitaryTerminal(); } },
{ "IFCSANITARYTERMINALTYPE", []( void )->BuildingEntity* { return new IfcSanitaryTerminalType(); } },
{ "IFCSCHEDULINGTIME", []( void )->BuildingEntity* { return new IfcSchedulingTime(); } },
{ "IFCSEAMCURVE", []( void )->BuildingEntity* { return new IfcSeamCurve(); } },
{ "IFCSECTIONPROPERTIES", []( void )->BuildingEntity* { return new IfcSectionProperties(); } },
{ "IFCSECTIONREINFORCEMENTPROPERTIES", []( void )->BuildingEntity* { return new IfcSectionReinforcementProperties(); } },
{ "IFCSECTIONEDSPINE", []( void )->BuildingEntity* { return new IfcSectionedSpine(); } },
{ "IFCSENSOR", []( void )->BuildingEntity* { return new IfcSensor(); } },
{ "IFCSENSORTYPE", []( void )->BuildingEntity* { return new IfcSensorType(); } },
{ "IFCSHADINGDEVICE", []( void )->BuildingEntity* { return new IfcShadingDevice(); } },
{ "IFCSHADINGDEVICETYPE", []( void )->BuildingEntity* { return new IfcShadingDeviceType(); } },
{ "IFCSHAPEASPECT", []( void )->BuildingEntity* { return new IfcShapeAspect(); } },
{ "IFCSHAPEMODEL", []( void )->BuildingEntity* { return new IfcShapeModel(); } },
{ "IFCSHAPEREPRESENTATION", []( void )->BuildingEntity* { return new IfcShapeRepresentation(); } },
{ "IFCSHELLBASEDSURFACEMODEL", []( void )->BuildingEntity* { return new IfcShellBasedSurfaceModel(); } },
{ "IFCSIMPLEPROPERTY", []( void )->BuildingEntity* { return new IfcSimpleProperty(); } },
{ "IFCSIMPLEPROPERTYTEMPLATE", []( void )->BuildingEntity* { return new IfcSimplePropertyTemplate(); } },
{ "IFCSITE", []( void )->BuildingEntity* { return new IfcSite(); } },
{ "IFCSLAB", []( void )->BuildingEntity* { return new IfcSlab(); } },
{ "IFCSLABELEMENTEDCASE", []( void )->BuildingEntity* { return new IfcSlabElementedCase(); } },
{ "IFCSLABSTANDARDCASE", []( void )->BuildingEntity* { return new IfcSlabStandardCase(); } },
{ "IFCSLABTYPE", []( void )->BuildingEntity* { return new IfcSlabType(); } },
{ "IFCSLIPPAGECONNECTIONCONDITION", []( void )->BuildingEntity* { return new IfcSlippageConnectionCondition(); } },
{ "IFCSOLARDEVICE", []( void )->BuildingEntity* { return new IfcSolarDevice(); } },
{ "IFCSOLARDEVICETYPE", []( void )->BuildingEntity* { return new IfcSolarDeviceType(); } },
{ "IFCSOLIDMODEL", []( void )->BuildingEntity* { return new IfcSolidModel(); } },
//{ "IFCSPACE", []( void )->BuildingEntity* { return new IfcSpace(); } },
{ "IFCSPACEHEATER", []( void )->BuildingEntity* { return new IfcSpaceHeater(); } },
{ "IFCSPACEHEATERTYPE", []( void )->BuildingEntity* { return new IfcSpaceHeaterType(); } },
{ "IFCSPACETYPE", []( void )->BuildingEntity* { return new IfcSpaceType(); } },
{ "IFCSPATIALELEMENT", []( void )->BuildingEntity* { return new IfcSpatialElement(); } },
{ "IFCSPATIALELEMENTTYPE", []( void )->BuildingEntity* { return new IfcSpatialElementType(); } },
{ "IFCSPATIALSTRUCTUREELEMENT", []( void )->BuildingEntity* { return new IfcSpatialStructureElement(); } },
{ "IFCSPATIALSTRUCTUREELEMENTTYPE", []( void )->BuildingEntity* { return new IfcSpatialStructureElementType(); } },
{ "IFCSPATIALZONE", []( void )->BuildingEntity* { return new IfcSpatialZone(); } },
{ "IFCSPATIALZONETYPE", []( void )->BuildingEntity* { return new IfcSpatialZoneType(); } },
{ "IFCSPHERE", []( void )->BuildingEntity* { return new IfcSphere(); } },
{ "IFCSPHERICALSURFACE", []( void )->BuildingEntity* { return new IfcSphericalSurface(); } },
{ "IFCSTACKTERMINAL", []( void )->BuildingEntity* { return new IfcStackTerminal(); } },
{ "IFCSTACKTERMINALTYPE", []( void )->BuildingEntity* { return new IfcStackTerminalType(); } },
{ "IFCSTAIR", []( void )->BuildingEntity* { return new IfcStair(); } },
{ "IFCSTAIRFLIGHT", []( void )->BuildingEntity* { return new IfcStairFlight(); } },
{ "IFCSTAIRFLIGHTTYPE", []( void )->BuildingEntity* { return new IfcStairFlightType(); } },
{ "IFCSTAIRTYPE", []( void )->BuildingEntity* { return new IfcStairType(); } },
{ "IFCSTRUCTURALACTION", []( void )->BuildingEntity* { return new IfcStructuralAction(); } },
{ "IFCSTRUCTURALACTIVITY", []( void )->BuildingEntity* { return new IfcStructuralActivity(); } },
{ "IFCSTRUCTURALANALYSISMODEL", []( void )->BuildingEntity* { return new IfcStructuralAnalysisModel(); } },
{ "IFCSTRUCTURALCONNECTION", []( void )->BuildingEntity* { return new IfcStructuralConnection(); } },
{ "IFCSTRUCTURALCONNECTIONCONDITION", []( void )->BuildingEntity* { return new IfcStructuralConnectionCondition(); } },
{ "IFCSTRUCTURALCURVEACTION", []( void )->BuildingEntity* { return new IfcStructuralCurveAction(); } },
{ "IFCSTRUCTURALCURVECONNECTION", []( void )->BuildingEntity* { return new IfcStructuralCurveConnection(); } },
{ "IFCSTRUCTURALCURVEMEMBER", []( void )->BuildingEntity* { return new IfcStructuralCurveMember(); } },
{ "IFCSTRUCTURALCURVEMEMBERVARYING", []( void )->BuildingEntity* { return new IfcStructuralCurveMemberVarying(); } },
{ "IFCSTRUCTURALCURVEREACTION", []( void )->BuildingEntity* { return new IfcStructuralCurveReaction(); } },
{ "IFCSTRUCTURALITEM", []( void )->BuildingEntity* { return new IfcStructuralItem(); } },
{ "IFCSTRUCTURALLINEARACTION", []( void )->BuildingEntity* { return new IfcStructuralLinearAction(); } },
{ "IFCSTRUCTURALLOAD", []( void )->BuildingEntity* { return new IfcStructuralLoad(); } },
{ "IFCSTRUCTURALLOADCASE", []( void )->BuildingEntity* { return new IfcStructuralLoadCase(); } },
{ "IFCSTRUCTURALLOADCONFIGURATION", []( void )->BuildingEntity* { return new IfcStructuralLoadConfiguration(); } },
{ "IFCSTRUCTURALLOADGROUP", []( void )->BuildingEntity* { return new IfcStructuralLoadGroup(); } },
{ "IFCSTRUCTURALLOADLINEARFORCE", []( void )->BuildingEntity* { return new IfcStructuralLoadLinearForce(); } },
{ "IFCSTRUCTURALLOADORRESULT", []( void )->BuildingEntity* { return new IfcStructuralLoadOrResult(); } },
{ "IFCSTRUCTURALLOADPLANARFORCE", []( void )->BuildingEntity* { return new IfcStructuralLoadPlanarForce(); } },
{ "IFCSTRUCTURALLOADSINGLEDISPLACEMENT", []( void )->BuildingEntity* { return new IfcStructuralLoadSingleDisplacement(); } },
{ "IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION", []( void )->BuildingEntity* { return new IfcStructuralLoadSingleDisplacementDistortion(); } },
{ "IFCSTRUCTURALLOADSINGLEFORCE", []( void )->BuildingEntity* { return new IfcStructuralLoadSingleForce(); } },
{ "IFCSTRUCTURALLOADSINGLEFORCEWARPING", []( void )->BuildingEntity* { return new IfcStructuralLoadSingleForceWarping(); } },
{ "IFCSTRUCTURALLOADSTATIC", []( void )->BuildingEntity* { return new IfcStructuralLoadStatic(); } },
{ "IFCSTRUCTURALLOADTEMPERATURE", []( void )->BuildingEntity* { return new IfcStructuralLoadTemperature(); } },
{ "IFCSTRUCTURALMEMBER", []( void )->BuildingEntity* { return new IfcStructuralMember(); } },
{ "IFCSTRUCTURALPLANARACTION", []( void )->BuildingEntity* { return new IfcStructuralPlanarAction(); } },
{ "IFCSTRUCTURALPOINTACTION", []( void )->BuildingEntity* { return new IfcStructuralPointAction(); } },
{ "IFCSTRUCTURALPOINTCONNECTION", []( void )->BuildingEntity* { return new IfcStructuralPointConnection(); } },
{ "IFCSTRUCTURALPOINTREACTION", []( void )->BuildingEntity* { return new IfcStructuralPointReaction(); } },
{ "IFCSTRUCTURALREACTION", []( void )->BuildingEntity* { return new IfcStructuralReaction(); } },
{ "IFCSTRUCTURALRESULTGROUP", []( void )->BuildingEntity* { return new IfcStructuralResultGroup(); } },
{ "IFCSTRUCTURALSURFACEACTION", []( void )->BuildingEntity* { return new IfcStructuralSurfaceAction(); } },
{ "IFCSTRUCTURALSURFACECONNECTION", []( void )->BuildingEntity* { return new IfcStructuralSurfaceConnection(); } },
{ "IFCSTRUCTURALSURFACEMEMBER", []( void )->BuildingEntity* { return new IfcStructuralSurfaceMember(); } },
{ "IFCSTRUCTURALSURFACEMEMBERVARYING", []( void )->BuildingEntity* { return new IfcStructuralSurfaceMemberVarying(); } },
{ "IFCSTRUCTURALSURFACEREACTION", []( void )->BuildingEntity* { return new IfcStructuralSurfaceReaction(); } },
{ "IFCSTYLEMODEL", []( void )->BuildingEntity* { return new IfcStyleModel(); } },
{ "IFCSTYLEDITEM", []( void )->BuildingEntity* { return new IfcStyledItem(); } },
{ "IFCSTYLEDREPRESENTATION", []( void )->BuildingEntity* { return new IfcStyledRepresentation(); } },
{ "IFCSUBCONTRACTRESOURCE", []( void )->BuildingEntity* { return new IfcSubContractResource(); } },
{ "IFCSUBCONTRACTRESOURCETYPE", []( void )->BuildingEntity* { return new IfcSubContractResourceType(); } },
{ "IFCSUBEDGE", []( void )->BuildingEntity* { return new IfcSubedge(); } },
{ "IFCSURFACE", []( void )->BuildingEntity* { return new IfcSurface(); } },
{ "IFCSURFACECURVE", []( void )->BuildingEntity* { return new IfcSurfaceCurve(); } },
{ "IFCSURFACECURVESWEPTAREASOLID", []( void )->BuildingEntity* { return new IfcSurfaceCurveSweptAreaSolid(); } },
{ "IFCSURFACEFEATURE", []( void )->BuildingEntity* { return new IfcSurfaceFeature(); } },
{ "IFCSURFACEOFLINEAREXTRUSION", []( void )->BuildingEntity* { return new IfcSurfaceOfLinearExtrusion(); } },
{ "IFCSURFACEOFREVOLUTION", []( void )->BuildingEntity* { return new IfcSurfaceOfRevolution(); } },
{ "IFCSURFACEREINFORCEMENTAREA", []( void )->BuildingEntity* { return new IfcSurfaceReinforcementArea(); } },
{ "IFCSURFACESTYLE", []( void )->BuildingEntity* { return new IfcSurfaceStyle(); } },
{ "IFCSURFACESTYLELIGHTING", []( void )->BuildingEntity* { return new IfcSurfaceStyleLighting(); } },
{ "IFCSURFACESTYLEREFRACTION", []( void )->BuildingEntity* { return new IfcSurfaceStyleRefraction(); } },
{ "IFCSURFACESTYLERENDERING", []( void )->BuildingEntity* { return new IfcSurfaceStyleRendering(); } },
{ "IFCSURFACESTYLESHADING", []( void )->BuildingEntity* { return new IfcSurfaceStyleShading(); } },
{ "IFCSURFACESTYLEWITHTEXTURES", []( void )->BuildingEntity* { return new IfcSurfaceStyleWithTextures(); } },
{ "IFCSURFACETEXTURE", []( void )->BuildingEntity* { return new IfcSurfaceTexture(); } },
{ "IFCSWEPTAREASOLID", []( void )->BuildingEntity* { return new IfcSweptAreaSolid(); } },
{ "IFCSWEPTDISKSOLID", []( void )->BuildingEntity* { return new IfcSweptDiskSolid(); } },
{ "IFCSWEPTDISKSOLIDPOLYGONAL", []( void )->BuildingEntity* { return new IfcSweptDiskSolidPolygonal(); } },
{ "IFCSWEPTSURFACE", []( void )->BuildingEntity* { return new IfcSweptSurface(); } },
{ "IFCSWITCHINGDEVICE", []( void )->BuildingEntity* { return new IfcSwitchingDevice(); } },
{ "IFCSWITCHINGDEVICETYPE", []( void )->BuildingEntity* { return new IfcSwitchingDeviceType(); } },
{ "IFCSYSTEM", []( void )->BuildingEntity* { return new IfcSystem(); } },
{ "IFCSYSTEMFURNITUREELEMENT", []( void )->BuildingEntity* { return new IfcSystemFurnitureElement(); } },
{ "IFCSYSTEMFURNITUREELEMENTTYPE", []( void )->BuildingEntity* { return new IfcSystemFurnitureElementType(); } },
{ "IFCTSHAPEPROFILEDEF", []( void )->BuildingEntity* { return new IfcTShapeProfileDef(); } },
{ "IFCTABLE", []( void )->BuildingEntity* { return new IfcTable(); } },
{ "IFCTABLECOLUMN", []( void )->BuildingEntity* { return new IfcTableColumn(); } },
{ "IFCTABLEROW", []( void )->BuildingEntity* { return new IfcTableRow(); } },
{ "IFCTANK", []( void )->BuildingEntity* { return new IfcTank(); } },
{ "IFCTANKTYPE", []( void )->BuildingEntity* { return new IfcTankType(); } },
{ "IFCTASK", []( void )->BuildingEntity* { return new IfcTask(); } },
{ "IFCTASKTIME", []( void )->BuildingEntity* { return new IfcTaskTime(); } },
{ "IFCTASKTIMERECURRING", []( void )->BuildingEntity* { return new IfcTaskTimeRecurring(); } },
{ "IFCTASKTYPE", []( void )->BuildingEntity* { return new IfcTaskType(); } },
{ "IFCTELECOMADDRESS", []( void )->BuildingEntity* { return new IfcTelecomAddress(); } },
{ "IFCTENDON", []( void )->BuildingEntity* { return new IfcTendon(); } },
{ "IFCTENDONANCHOR", []( void )->BuildingEntity* { return new IfcTendonAnchor(); } },
{ "IFCTENDONANCHORTYPE", []( void )->BuildingEntity* { return new IfcTendonAnchorType(); } },
{ "IFCTENDONTYPE", []( void )->BuildingEntity* { return new IfcTendonType(); } },
{ "IFCTESSELLATEDFACESET", []( void )->BuildingEntity* { return new IfcTessellatedFaceSet(); } },
{ "IFCTESSELLATEDITEM", []( void )->BuildingEntity* { return new IfcTessellatedItem(); } },
{ "IFCTEXTLITERAL", []( void )->BuildingEntity* { return new IfcTextLiteral(); } },
{ "IFCTEXTLITERALWITHEXTENT", []( void )->BuildingEntity* { return new IfcTextLiteralWithExtent(); } },
{ "IFCTEXTSTYLE", []( void )->BuildingEntity* { return new IfcTextStyle(); } },
{ "IFCTEXTSTYLEFONTMODEL", []( void )->BuildingEntity* { return new IfcTextStyleFontModel(); } },
{ "IFCTEXTSTYLEFORDEFINEDFONT", []( void )->BuildingEntity* { return new IfcTextStyleForDefinedFont(); } },
{ "IFCTEXTSTYLETEXTMODEL", []( void )->BuildingEntity* { return new IfcTextStyleTextModel(); } },
{ "IFCTEXTURECOORDINATE", []( void )->BuildingEntity* { return new IfcTextureCoordinate(); } },
{ "IFCTEXTURECOORDINATEGENERATOR", []( void )->BuildingEntity* { return new IfcTextureCoordinateGenerator(); } },
{ "IFCTEXTUREMAP", []( void )->BuildingEntity* { return new IfcTextureMap(); } },
{ "IFCTEXTUREVERTEX", []( void )->BuildingEntity* { return new IfcTextureVertex(); } },
{ "IFCTEXTUREVERTEXLIST", []( void )->BuildingEntity* { return new IfcTextureVertexList(); } },
{ "IFCTIMEPERIOD", []( void )->BuildingEntity* { return new IfcTimePeriod(); } },
{ "IFCTIMESERIES", []( void )->BuildingEntity* { return new IfcTimeSeries(); } },
{ "IFCTIMESERIESVALUE", []( void )->BuildingEntity* { return new IfcTimeSeriesValue(); } },
{ "IFCTOPOLOGICALREPRESENTATIONITEM", []( void )->BuildingEntity* { return new IfcTopologicalRepresentationItem(); } },
{ "IFCTOPOLOGYREPRESENTATION", []( void )->BuildingEntity* { return new IfcTopologyRepresentation(); } },
{ "IFCTOROIDALSURFACE", []( void )->BuildingEntity* { return new IfcToroidalSurface(); } },
{ "IFCTRANSFORMER", []( void )->BuildingEntity* { return new IfcTransformer(); } },
{ "IFCTRANSFORMERTYPE", []( void )->BuildingEntity* { return new IfcTransformerType(); } },
{ "IFCTRANSPORTELEMENT", []( void )->BuildingEntity* { return new IfcTransportElement(); } },
{ "IFCTRANSPORTELEMENTTYPE", []( void )->BuildingEntity* { return new IfcTransportElementType(); } },
{ "IFCTRAPEZIUMPROFILEDEF", []( void )->BuildingEntity* { return new IfcTrapeziumProfileDef(); } },
{ "IFCTRIANGULATEDFACESET", []( void )->BuildingEntity* { return new IfcTriangulatedFaceSet(); } },
{ "IFCTRIMMEDCURVE", []( void )->BuildingEntity* { return new IfcTrimmedCurve(); } },
{ "IFCTUBEBUNDLE", []( void )->BuildingEntity* { return new IfcTubeBundle(); } },
{ "IFCTUBEBUNDLETYPE", []( void )->BuildingEntity* { return new IfcTubeBundleType(); } },
{ "IFCTYPEOBJECT", []( void )->BuildingEntity* { return new IfcTypeObject(); } },
{ "IFCTYPEPROCESS", []( void )->BuildingEntity* { return new IfcTypeProcess(); } },
{ "IFCTYPEPRODUCT", []( void )->BuildingEntity* { return new IfcTypeProduct(); } },
{ "IFCTYPERESOURCE", []( void )->BuildingEntity* { return new IfcTypeResource(); } },
{ "IFCUSHAPEPROFILEDEF", []( void )->BuildingEntity* { return new IfcUShapeProfileDef(); } },
{ "IFCUNITASSIGNMENT", []( void )->BuildingEntity* { return new IfcUnitAssignment(); } },
{ "IFCUNITARYCONTROLELEMENT", []( void )->BuildingEntity* { return new IfcUnitaryControlElement(); } },
{ "IFCUNITARYCONTROLELEMENTTYPE", []( void )->BuildingEntity* { return new IfcUnitaryControlElementType(); } },
{ "IFCUNITARYEQUIPMENT", []( void )->BuildingEntity* { return new IfcUnitaryEquipment(); } },
{ "IFCUNITARYEQUIPMENTTYPE", []( void )->BuildingEntity* { return new IfcUnitaryEquipmentType(); } },
{ "IFCVALVE", []( void )->BuildingEntity* { return new IfcValve(); } },
{ "IFCVALVETYPE", []( void )->BuildingEntity* { return new IfcValveType(); } },
{ "IFCVECTOR", []( void )->BuildingEntity* { return new IfcVector(); } },
{ "IFCVERTEX", []( void )->BuildingEntity* { return new IfcVertex(); } },
{ "IFCVERTEXLOOP", []( void )->BuildingEntity* { return new IfcVertexLoop(); } },
{ "IFCVERTEXPOINT", []( void )->BuildingEntity* { return new IfcVertexPoint(); } },
{ "IFCVIBRATIONISOLATOR", []( void )->BuildingEntity* { return new IfcVibrationIsolator(); } },
{ "IFCVIBRATIONISOLATORTYPE", []( void )->BuildingEntity* { return new IfcVibrationIsolatorType(); } },
{ "IFCVIRTUALELEMENT", []( void )->BuildingEntity* { return new IfcVirtualElement(); } },
{ "IFCVIRTUALGRIDINTERSECTION", []( void )->BuildingEntity* { return new IfcVirtualGridIntersection(); } },
{ "IFCVOIDINGFEATURE", []( void )->BuildingEntity* { return new IfcVoidingFeature(); } },
{ "IFCWALL", []( void )->BuildingEntity* { return new IfcWall(); } },
{ "IFCWALLELEMENTEDCASE", []( void )->BuildingEntity* { return new IfcWallElementedCase(); } },
{ "IFCWALLSTANDARDCASE", []( void )->BuildingEntity* { return new IfcWallStandardCase(); } },
{ "IFCWALLTYPE", []( void )->BuildingEntity* { return new IfcWallType(); } },
{ "IFCWASTETERMINAL", []( void )->BuildingEntity* { return new IfcWasteTerminal(); } },
{ "IFCWASTETERMINALTYPE", []( void )->BuildingEntity* { return new IfcWasteTerminalType(); } },
{ "IFCWINDOW", []( void )->BuildingEntity* { return new IfcWindow(); } },
{ "IFCWINDOWLININGPROPERTIES", []( void )->BuildingEntity* { return new IfcWindowLiningProperties(); } },
{ "IFCWINDOWPANELPROPERTIES", []( void )->BuildingEntity* { return new IfcWindowPanelProperties(); } },
{ "IFCWINDOWSTANDARDCASE", []( void )->BuildingEntity* { return new IfcWindowStandardCase(); } },
{ "IFCWINDOWSTYLE", []( void )->BuildingEntity* { return new IfcWindowStyle(); } },
{ "IFCWINDOWTYPE", []( void )->BuildingEntity* { return new IfcWindowType(); } },
{ "IFCWORKCALENDAR", []( void )->BuildingEntity* { return new IfcWorkCalendar(); } },
{ "IFCWORKCONTROL", []( void )->BuildingEntity* { return new IfcWorkControl(); } },
{ "IFCWORKPLAN", []( void )->BuildingEntity* { return new IfcWorkPlan(); } },
{ "IFCWORKSCHEDULE", []( void )->BuildingEntity* { return new IfcWorkSchedule(); } },
{ "IFCWORKTIME", []( void )->BuildingEntity* { return new IfcWorkTime(); } },
{ "IFCZSHAPEPROFILEDEF", []( void )->BuildingEntity* { return new IfcZShapeProfileDef(); } },
	{ "IFCZONE", []( void )->BuildingEntity* { return new IfcZone(); } }
};

BuildingEntity* EntityFactory::createEntityObject( const std::string& class_name_upper )
{
	auto it_find = entity_factory_map.find( class_name_upper );
	if( it_find != entity_factory_map.end() )
	{
		return it_find->second();
	}
	// class_name not registered
	return nullptr;
}
void EntityFactory::emptyMapOfEntities()
{
	entity_factory_map.clear();
}
